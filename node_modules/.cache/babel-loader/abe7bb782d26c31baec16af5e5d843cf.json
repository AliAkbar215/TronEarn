{"ast":null,"code":"import _slicedToArray from\"/home/hassan/blocTechProj/TRON_EARN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useSelector}from\"react-redux\";import Tree from\"react-d3-tree\";/**\n * @author\n * @function Downline\n **/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Downline=function Downline(props){var _useSelector=useSelector(function(state){return state.UserReducer;}),downlineCount=_useSelector.downlineCount,binaryTree=_useSelector.binaryTree;var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),tronWeb=_React$useState2[0],setTronWeb=_React$useState2[1];// console.log(downlineCount,\"downlineCount==>\")\nReact.useEffect(function(){var tronLoader=setInterval(function(){if(window.tronWeb&&window.tronWeb.ready){setTronWeb(window.tronWeb);clearInterval(tronLoader);}},500);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:\"center\"},children:\"Downline\"})}),/*#__PURE__*/_jsxs(\"table\",{class:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Address\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:downlineCount?downlineCount.map(function(item,i){// console.log(item,\"item=======>\")\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:+i+1}),/*#__PURE__*/_jsx(\"th\",{children:tronWeb&&tronWeb.address.fromHex(item)})]});}):null})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"treeWrapper\",style:{width:\"100%\",height:\"50em\"},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Binary Tree\"})}),binaryTree&&/*#__PURE__*/_jsx(Tree,{data:binaryTree})]})]});};export default Downline;","map":{"version":3,"sources":["/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Downline/index.js"],"names":["React","useSelector","Tree","Downline","props","state","UserReducer","downlineCount","binaryTree","useState","tronWeb","setTronWeb","useEffect","tronLoader","setInterval","window","ready","clearInterval","textAlign","map","item","i","address","fromHex","width","height"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CAEA;AACA;AACA;AACA,I,6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,kBACYH,WAAW,CAC/C,SAACI,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAjB,EAD+C,CADvB,CAClBC,aADkB,cAClBA,aADkB,CACHC,UADG,cACHA,UADG,qBAIIR,KAAK,CAACS,QAAN,EAJJ,oDAInBC,OAJmB,qBAIVC,UAJU,qBAM1B;AACAX,KAAK,CAACY,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,UAAU,CAAGC,WAAW,CAAC,UAAM,CACnC,GAAIC,MAAM,CAACL,OAAP,EAAkBK,MAAM,CAACL,OAAP,CAAeM,KAArC,CAA4C,CAC1CL,UAAU,CAACI,MAAM,CAACL,OAAR,CAAV,CACAO,aAAa,CAACJ,UAAD,CAAb,CACD,CACF,CAL6B,CAK3B,GAL2B,CAA9B,CAMD,CAPD,CAOG,EAPH,EASA,mBACE,wCACE,oCACE,kCACE,WAAI,KAAK,CAAE,CAAEK,SAAS,CAAE,QAAb,CAAX,sBADF,EADF,cAIE,eAAO,KAAK,CAAC,qBAAb,wBACE,oCACE,mCACE,WAAI,KAAK,CAAC,KAAV,eADF,cAGE,WAAI,KAAK,CAAC,KAAV,qBAHF,GADF,EADF,cAQE,uBACGX,aAAa,CACVA,aAAa,CAACY,GAAd,CAAkB,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC7B;AACA,mBACE,mCACE,WAAI,KAAK,CAAC,KAAV,UAAiB,CAACA,CAAD,CAAK,CAAtB,EADF,cAGE,oBAAKX,OAAO,EAAIA,OAAO,CAACY,OAAR,CAAgBC,OAAhB,CAAwBH,IAAxB,CAAhB,EAHF,GADF,CAOD,CATD,CADU,CAWV,IAZN,EARF,GAJF,GADF,cA8BE,aAAK,EAAE,CAAC,aAAR,CAAsB,KAAK,CAAE,CAAEI,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAA7B,wBACE,kCACE,mCADF,EADF,CAIGjB,UAAU,eAAI,KAAC,IAAD,EAAM,IAAI,CAAEA,UAAZ,EAJjB,GA9BF,GADF,CAuCD,CAvDD,CAyDA,cAAeL,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Tree from \"react-d3-tree\";\n\n/**\n * @author\n * @function Downline\n **/\n\nconst Downline = (props) => {\n  const { downlineCount, binaryTree } = useSelector(\n    (state) => state.UserReducer\n  );\n  const [tronWeb, setTronWeb] = React.useState();\n\n  // console.log(downlineCount,\"downlineCount==>\")\n  React.useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n      }\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <div>\n        <div>\n          <h2 style={{ textAlign: \"center\" }}>Downline</h2>\n        </div>\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              {/* <th scope=\"col\">First</th> */}\n              <th scope=\"col\">Address</th>\n            </tr>\n          </thead>\n          <tbody>\n            {downlineCount\n              ? downlineCount.map((item, i) => {\n                  // console.log(item,\"item=======>\")\n                  return (\n                    <tr>\n                      <th scope=\"row\">{+i + 1}</th>\n                      {/* <td> {+i + 1}</td> */}\n                      <th>{tronWeb && tronWeb.address.fromHex(item)}</th>\n                    </tr>\n                  );\n                })\n              : null}\n          </tbody>\n        </table>\n      </div>\n\n      <div id=\"treeWrapper\" style={{ width: \"100%\", height: \"50em\" }}>\n        <div>\n          <h2>Binary Tree</h2>\n        </div>\n        {binaryTree && <Tree data={binaryTree}/>}\n      </div>\n    </>\n  );\n};\n\nexport default Downline;\n"]},"metadata":{},"sourceType":"module"}