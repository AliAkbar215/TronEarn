{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/hassan/blocTechProj/TRON_EARN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/home/hassan/blocTechProj/TRON_EARN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/hassan/blocTechProj/TRON_EARN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/hassan/blocTechProj/TRON_EARN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _templateObject;import React,{useState}from\"react\";import Dashboard from\"./Dashboard\";import Login from\"./Components/Auth/signIn\";import{Route,Redirect}from\"react-router-dom\";import{useSelector,useDispatch}from\"react-redux\";import{UserDataAction,CheckCurrentUser}from\"./redux/actions\";import LandingPage from\"./views/Header\";import CircleLoader from\"react-spinners/CircleLoader\";import{css}from\"@emotion/core\";/**\n * @author\n * @function MainApp\n **/import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthRoute=function AuthRoute(_ref){var Component=_ref.component,authUser=_ref.authUser,rest=_objectWithoutProperties(_ref,[\"component\",\"authUser\"]);return/*#__PURE__*/_jsx(Route,{path:\"/dashboard\"// exact\n,render:function render(props){return!authUser?/*#__PURE__*/_jsx(Redirect,{to:{pathname:\"/login\",state:{from:props.location}}}):/*#__PURE__*/ //  || isDemo\n_jsx(Component,_objectSpread({},props));}});};var MainApp=function MainApp(){var _useSelector=useSelector(function(state){return state.UserReducer;}),isUserAuthenticated=_useSelector.isUserAuthenticated,checkAuth=_useSelector.checkAuth,userWalletAddress=_useSelector.userWalletAddress;var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),tronWeb=_React$useState2[0],setTronWeb=_React$useState2[1];var dispatch=useDispatch();var _useState=useState(),_useState2=_slicedToArray(_useState,2),auth=_useState2[0],setAuth=_useState2[1];var isAuth=localStorage.getItem(\"isAuth\");React.useEffect(function(){var tronLoader=setInterval(function(){if(window.tronWeb&&window.tronWeb.ready){setTronWeb(window.tronWeb);clearInterval(tronLoader);setAuth(isAuth?isAuth:false);}else{dispatch({type:\"AUTH_FAILED\"});}},500);},[]);// console.log(\"here is the auth\",auth);\nReact.useEffect(function(){if(tronWeb&&auth){dispatch(CheckCurrentUser(tronWeb.defaultAddress.base58,tronWeb,auth));}else if(auth!=undefined){dispatch({type:\"AUTH_FAILED\"});}},[tronWeb,auth]);React.useEffect(function(){if(tronWeb){if(isUserAuthenticated){setInterval(function(){dispatch(UserDataAction(userWalletAddress,tronWeb,auth));},3000);}}},[tronWeb,isUserAuthenticated,userWalletAddress]);React.useEffect(function(){if(tronWeb){dispatch(UserDataAction(tronWeb.defaultAddress.base58,tronWeb,auth));}},[tronWeb]);var override=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: block;\\n    margin-top: 20%;\\n    margin-left: 45%;\\n    border-color: red;\\n  \"])));var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];if(checkAuth==null){return/*#__PURE__*/_jsx(CircleLoader,{color:\"red\",loading:loading,css:override,size:100});}else return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(AuthRoute,{authUser:isUserAuthenticated,component:Dashboard}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:function component(){return isUserAuthenticated?/*#__PURE__*/_jsx(Redirect,{to:\"/dashboard\"}):/*#__PURE__*/_jsx(Login,{});}})]});};export default MainApp;","map":{"version":3,"sources":["/home/hassan/blocTechProj/TRON_EARN/src/mainApp.jsx"],"names":["React","useState","Dashboard","Login","Route","Redirect","useSelector","useDispatch","UserDataAction","CheckCurrentUser","LandingPage","CircleLoader","css","AuthRoute","Component","component","authUser","rest","props","pathname","state","from","location","MainApp","UserReducer","isUserAuthenticated","checkAuth","userWalletAddress","tronWeb","setTronWeb","dispatch","auth","setAuth","isAuth","localStorage","getItem","useEffect","tronLoader","setInterval","window","ready","clearInterval","type","defaultAddress","base58","undefined","override","loading","setLoading"],"mappings":"+pBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,CAAyBC,gBAAzB,KAAiD,iBAAjD,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA;AACA;AACA;AACA,I,6IAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,UAAcC,CAAAA,SAAd,MAAGC,SAAH,CAAyBC,QAAzB,MAAyBA,QAAzB,CAAsCC,IAAtC,4EAChB,KAAC,KAAD,EACE,IAAI,CAAC,YACL;AAFF,CAGE,MAAM,CAAE,gBAACC,KAAD,QACN,CAACF,QAAD,cACE,KAAC,QAAD,EACE,EAAE,CAAE,CACFG,QAAQ,CAAE,QADR,CAEFC,KAAK,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACI,QAAd,CAFL,CADN,EADF,eAQI;AACA,KAAC,SAAD,kBAAeJ,KAAf,EAVE,EAHV,EADgB,EAAlB,CAoBA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,kBACyCjB,WAAW,CACtE,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACI,WAAjB,EADsE,CADpD,CACZC,mBADY,cACZA,mBADY,CACSC,SADT,cACSA,SADT,CACmBC,iBADnB,cACmBA,iBADnB,qBAKU3B,KAAK,CAACC,QAAN,EALV,oDAKb2B,OALa,qBAKJC,UALI,qBAMpB,GAAMC,CAAAA,QAAQ,CAAGvB,WAAW,EAA5B,CANoB,cAOIN,QAAQ,EAPZ,wCAOb8B,IAPa,eAOPC,OAPO,eASpB,GAAIC,CAAAA,MAAM,CAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb,CACAnC,KAAK,CAACoC,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,UAAU,CAAGC,WAAW,CAAC,UAAM,CACnC,GAAIC,MAAM,CAACX,OAAP,EAAkBW,MAAM,CAACX,OAAP,CAAeY,KAArC,CAA4C,CAC1CX,UAAU,CAACU,MAAM,CAACX,OAAR,CAAV,CACAa,aAAa,CAACJ,UAAD,CAAb,CACAL,OAAO,CAACC,MAAM,CAAGA,MAAH,CAAY,KAAnB,CAAP,CACD,CAJD,IAIO,CACLH,QAAQ,CAAC,CACPY,IAAI,CAAE,aADC,CAAD,CAAR,CAGD,CACF,CAV6B,CAU3B,GAV2B,CAA9B,CAWD,CAZD,CAYG,EAZH,EAcA;AAEA1C,KAAK,CAACoC,SAAN,CAAgB,UAAM,CACpB,GAAIR,OAAO,EAAIG,IAAf,CAAqB,CAEnBD,QAAQ,CAACrB,gBAAgB,CAACmB,OAAO,CAACe,cAAR,CAAuBC,MAAxB,CAAgChB,OAAhC,CAAyCG,IAAzC,CAAjB,CAAR,CACD,CAHD,IAGO,IAAIA,IAAI,EAAIc,SAAZ,CAAuB,CAC5Bf,QAAQ,CAAC,CACPY,IAAI,CAAE,aADC,CAAD,CAAR,CAGD,CACF,CATD,CASG,CAACd,OAAD,CAAUG,IAAV,CATH,EAWA/B,KAAK,CAACoC,SAAN,CAAgB,UAAM,CACpB,GAAIR,OAAJ,CAAa,CACX,GAAIH,mBAAJ,CAAyB,CACvBa,WAAW,CAAC,UAAM,CAChBR,QAAQ,CAACtB,cAAc,CAACmB,iBAAD,CAAoBC,OAApB,CAA6BG,IAA7B,CAAf,CAAR,CACD,CAFU,CAER,IAFQ,CAAX,CAGD,CACF,CACF,CARD,CAQG,CAACH,OAAD,CAASH,mBAAT,CAA6BE,iBAA7B,CARH,EAUA3B,KAAK,CAACoC,SAAN,CAAgB,UAAM,CACpB,GAAIR,OAAJ,CAAa,CACXE,QAAQ,CAACtB,cAAc,CAACoB,OAAO,CAACe,cAAR,CAAuBC,MAAxB,CAAgChB,OAAhC,CAAyCG,IAAzC,CAAf,CAAR,CACD,CACF,CAJD,CAIG,CAACH,OAAD,CAJH,EAMA,GAAMkB,CAAAA,QAAQ,CAAGlC,GAAH,+JAAd,CArDoB,eA4DUX,QAAQ,CAAC,IAAD,CA5DlB,yCA4Db8C,OA5Da,eA4DJC,UA5DI,eA8DpB,GAAItB,SAAS,EAAI,IAAjB,CAAuB,CACrB,mBACE,KAAC,YAAD,EAAc,KAAK,CAAC,KAApB,CAA0B,OAAO,CAAEqB,OAAnC,CAA4C,GAAG,CAAED,QAAjD,CAA2D,IAAI,CAAE,GAAjE,EADF,CAGD,CAJD,IAKE,oBACE,wCACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEpC,WAAjC,EADF,cAEE,KAAC,SAAD,EAAW,QAAQ,CAAEe,mBAArB,CAA0C,SAAS,CAAEvB,SAArD,EAFF,cAGE,KAAC,KAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAE,2BACTuB,CAAAA,mBAAmB,cAAG,KAAC,QAAD,EAAU,EAAE,CAAC,YAAb,EAAH,cAAkC,KAAC,KAAD,IAD5C,EAHb,EAHF,GADF,CAaH,CAhFD,CAkFA,cAAeF,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Components/Auth/signIn\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UserDataAction, CheckCurrentUser } from \"./redux/actions\";\nimport LandingPage from \"./views/Header\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport { css } from \"@emotion/core\";\n\n/**\n * @author\n * @function MainApp\n **/\n\nconst AuthRoute = ({ component: Component, authUser, ...rest }) => (\n  <Route\n    path=\"/dashboard\"\n    // exact\n    render={(props) =>\n      !authUser ? (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      ) : (\n          //  || isDemo\n          <Component {...props} />\n        )\n    }\n  />\n);\n\nconst MainApp = () => {\n  const { isUserAuthenticated, checkAuth,userWalletAddress } = useSelector(\n    (state) => state.UserReducer\n  );\n\n  const [tronWeb, setTronWeb] = React.useState();\n  const dispatch = useDispatch();\n  const [auth, setAuth] = useState();\n\n  let isAuth = localStorage.getItem(\"isAuth\");\n  React.useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n        setAuth(isAuth ? isAuth : false);\n      } else {\n        dispatch({\n          type: \"AUTH_FAILED\",\n        });\n      }\n    }, 500);\n  }, []);\n\n  // console.log(\"here is the auth\",auth);\n  \n  React.useEffect(() => {\n    if (tronWeb && auth) {\n\n      dispatch(CheckCurrentUser(tronWeb.defaultAddress.base58, tronWeb, auth));\n    } else if (auth != undefined) {\n      dispatch({\n        type: \"AUTH_FAILED\",\n      });\n    }\n  }, [tronWeb, auth]);\n\n  React.useEffect(() => {\n    if (tronWeb) {\n      if (isUserAuthenticated) {\n        setInterval(() => {\n          dispatch(UserDataAction(userWalletAddress, tronWeb, auth));\n        }, 3000);\n      }\n    }\n  }, [tronWeb,isUserAuthenticated,userWalletAddress]);\n\n  React.useEffect(() => {\n    if (tronWeb) {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb, auth));\n    }\n  }, [tronWeb]);\n\n  const override = css`\n    display: block;\n    margin-top: 20%;\n    margin-left: 45%;\n    border-color: red;\n  `;\n\n  const [loading, setLoading] = useState(true);\n\n  if (checkAuth == null) {\n    return (\n      <CircleLoader color=\"red\" loading={loading} css={override} size={100} />\n    );\n  } else\n    return (\n      <>\n        <Route exact path=\"/\" component={LandingPage} />\n        <AuthRoute authUser={isUserAuthenticated} component={Dashboard} />\n        <Route\n          exact\n          path=\"/login\"\n          component={() =>\n            isUserAuthenticated ? <Redirect to=\"/dashboard\" /> : <Login />\n          }\n        />\n      </>\n    );\n};\n\nexport default MainApp;\n"]},"metadata":{},"sourceType":"module"}