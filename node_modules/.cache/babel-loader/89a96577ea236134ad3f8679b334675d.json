{"ast":null,"code":"var _jsxFileName = \"/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Downline/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Tree from \"react-d3-tree\";\n/**\n * @author\n * @function Downline\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Downline = props => {\n  _s();\n\n  const {\n    downlineCount,\n    binaryTree\n  } = useSelector(state => state.UserReducer);\n  const [tronWeb, setTronWeb] = React.useState(); // console.log(downlineCount,\"downlineCount==>\")\n\n  React.useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n      }\n    }, 500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#b8c0f1\"\n          },\n          children: \"Downline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              style: {\n                color: \"#e4e6f7\"\n              },\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              style: {\n                color: \"#e4e6f7\"\n              },\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: downlineCount ? downlineCount.map((item, i) => {\n            // console.log(item,\"item=======>\")\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                style: {\n                  color: \"#e4e6f7\"\n                },\n                children: [\" \", +i + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  color: \"#e4e6f7\"\n                },\n                children: tronWeb && tronWeb.address.fromHex(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"treeWrapper\",\n      style: {\n        width: \"100%\",\n        height: \"50em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#b8c0f1\"\n          },\n          children: \"Binary Tree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), binaryTree && /*#__PURE__*/_jsxDEV(Tree, {\n        data: binaryTree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Downline, \"qAg5wjJTLCnC/tuHtugZMvw7TsE=\", false, function () {\n  return [useSelector];\n});\n\n_c = Downline;\nexport default Downline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Downline\");","map":{"version":3,"sources":["/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Downline/index.js"],"names":["React","useSelector","Tree","Downline","props","downlineCount","binaryTree","state","UserReducer","tronWeb","setTronWeb","useState","useEffect","tronLoader","setInterval","window","ready","clearInterval","textAlign","color","map","item","i","address","fromHex","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Tree from \"react-d3-tree\";\n\n/**\n * @author\n * @function Downline\n **/\n\nconst Downline = (props) => {\n  \n  const { downlineCount, binaryTree } = useSelector(\n    (state) => state.UserReducer\n  );\n  const [tronWeb, setTronWeb] = React.useState();\n\n  // console.log(downlineCount,\"downlineCount==>\")\n  React.useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n      }\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <div>\n        <div>\n          <h2 style={{ textAlign: \"center\", color:\"#b8c0f1\" }}>Downline</h2>\n        </div>\n        <table class=\"table table-striped\" >\n          <thead>\n            <tr >\n              <th scope=\"col\" style={{ color:\"#e4e6f7\"}}>#</th>\n              {/* <th scope=\"col\">First</th> */}\n              <th scope=\"col\" style={{ color:\"#e4e6f7\"}}>Address</th>\n            </tr>\n          </thead>\n          <tbody>\n            {downlineCount\n              ? downlineCount.map((item, i) => {\n                  // console.log(item,\"item=======>\")\n                  return (\n                    <tr >\n                      <th scope=\"row\" style={{ color:\"#e4e6f7\"}}> {+i + 1}</th>\n                      {/* <td> {+i + 1}</td> */}\n                      <th style={{ color:\"#e4e6f7\"}}>{tronWeb && tronWeb.address.fromHex(item)}</th>\n                    </tr>\n                  );\n                })\n              : null}\n          </tbody>\n        </table>\n      </div>\n\n      <div id=\"treeWrapper\" style={{ width: \"100%\", height: \"50em\" }}>\n        <div>\n          <h2 style={{color:\"#b8c0f1\"}}>Binary Tree</h2>\n        </div>\n        {binaryTree && <Tree data={binaryTree} />}\n      </div>\n    </>\n  );\n};\n\nexport default Downline;\n"]},"metadata":{},"sourceType":"module"}