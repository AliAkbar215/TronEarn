{"ast":null,"code":"var _jsxFileName = \"/home/hassan/blocTechProj/TRON_EARN/src/mainApp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Components/Auth/signIn\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UserDataAction, CheckCurrentUser } from \"./redux/actions\";\nimport LandingPage from \"./views/Header\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport { css } from \"@emotion/core\";\n/**\n * @author\n * @function MainApp\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthRoute = ({\n  component: Component,\n  authUser,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  path: \"/dashboard\" // exact\n  ,\n  render: props => !authUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\",\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this) :\n  /*#__PURE__*/\n  //  || isDemo\n  _jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = AuthRoute;\n\nconst MainApp = () => {\n  _s();\n\n  const {\n    isUserAuthenticated,\n    checkAuth,\n    userWalletAddress\n  } = useSelector(state => state.UserReducer);\n  const [tronWeb, setTronWeb] = React.useState();\n  const dispatch = useDispatch();\n  const [auth, setAuth] = useState();\n  let isAuth = localStorage.getItem(\"isAuth\");\n  React.useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n        setAuth(isAuth ? isAuth : false);\n      } else {\n        dispatch({\n          type: \"AUTH_FAILED\"\n        });\n      }\n    }, 500);\n  }, []); // console.log(\"here is the auth\",auth);\n\n  React.useEffect(() => {\n    if (tronWeb && auth) {\n      dispatch(CheckCurrentUser(tronWeb.defaultAddress.base58, tronWeb, auth));\n    } else if (auth != undefined) {\n      dispatch({\n        type: \"AUTH_FAILED\"\n      });\n    }\n  }, [tronWeb, auth]);\n  React.useEffect(() => {\n    if (tronWeb) {\n      if (isUserAuthenticated) {\n        let endInterval = setInterval(() => {\n          dispatch(UserDataAction(userWalletAddress, tronWeb, auth));\n        }, 3000);\n      }\n    }\n  }, [tronWeb, isUserAuthenticated, userWalletAddress]);\n  React.useEffect(() => {\n    if (tronWeb) {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb, auth));\n    }\n  }, [tronWeb]);\n  const override = css`\n    display: block;\n    margin-top: 20%;\n    margin-left: 45%;\n    border-color: red;\n  `;\n  const [loading, setLoading] = useState(true);\n\n  if (checkAuth == null) {\n    return /*#__PURE__*/_jsxDEV(CircleLoader, {\n      color: \"red\",\n      loading: loading,\n      css: override,\n      size: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: LandingPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n      authUser: isUserAuthenticated,\n      component: Dashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: () => isUserAuthenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainApp, \"RPsdswebPnQ2WxLsDlFXErOTltA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = MainApp;\nexport default MainApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthRoute\");\n$RefreshReg$(_c2, \"MainApp\");","map":{"version":3,"sources":["/home/hassan/blocTechProj/TRON_EARN/src/mainApp.jsx"],"names":["React","useState","Dashboard","Login","Route","Redirect","useSelector","useDispatch","UserDataAction","CheckCurrentUser","LandingPage","CircleLoader","css","AuthRoute","component","Component","authUser","rest","props","pathname","state","from","location","MainApp","isUserAuthenticated","checkAuth","userWalletAddress","UserReducer","tronWeb","setTronWeb","dispatch","auth","setAuth","isAuth","localStorage","getItem","useEffect","tronLoader","setInterval","window","ready","clearInterval","type","defaultAddress","base58","undefined","endInterval","override","loading","setLoading"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./Components/Auth/signIn\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UserDataAction, CheckCurrentUser } from \"./redux/actions\";\nimport LandingPage from \"./views/Header\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport { css } from \"@emotion/core\";\n\n/**\n * @author\n * @function MainApp\n **/\n\nconst AuthRoute = ({ component: Component, authUser, ...rest }) => (\n  <Route\n    path=\"/dashboard\"\n    // exact\n    render={(props) =>\n      !authUser ? (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      ) : (\n          //  || isDemo\n          <Component {...props} />\n        )\n    }\n  />\n);\n\nconst MainApp = () => {\n  const { isUserAuthenticated, checkAuth,userWalletAddress } = useSelector(\n    (state) => state.UserReducer\n  );\n\n  const [tronWeb, setTronWeb] = React.useState();\n  const dispatch = useDispatch();\n  const [auth, setAuth] = useState();\n\n  let isAuth = localStorage.getItem(\"isAuth\");\n  React.useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n        setAuth(isAuth ? isAuth : false);\n      } else {\n        dispatch({\n          type: \"AUTH_FAILED\",\n        });\n      }\n    }, 500);\n  }, []);\n\n  // console.log(\"here is the auth\",auth);\n  \n  React.useEffect(() => {\n    if (tronWeb && auth) {\n\n      dispatch(CheckCurrentUser(tronWeb.defaultAddress.base58, tronWeb, auth));\n    } else if (auth != undefined) {\n      dispatch({\n        type: \"AUTH_FAILED\",\n      });\n    }\n  }, [tronWeb, auth]);\n\n  React.useEffect(() => {\n    if (tronWeb) {\n      if (isUserAuthenticated) {\n       let endInterval= setInterval(() => {\n          dispatch(UserDataAction(userWalletAddress, tronWeb, auth));\n        }, 3000);\n\n      }\n    }\n  }, [tronWeb,isUserAuthenticated,userWalletAddress]);\n\n  React.useEffect(() => {\n    if (tronWeb) {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb, auth));\n    }\n  }, [tronWeb]);\n\n  const override = css`\n    display: block;\n    margin-top: 20%;\n    margin-left: 45%;\n    border-color: red;\n  `;\n\n  const [loading, setLoading] = useState(true);\n\n  if (checkAuth == null) {\n    return (\n      <CircleLoader color=\"red\" loading={loading} css={override} size={100} />\n    );\n  } else\n    return (\n      <>\n        <Route exact path=\"/\" component={LandingPage} />\n        <AuthRoute authUser={isUserAuthenticated} component={Dashboard} />\n        <Route\n          exact\n          path=\"/login\"\n          component={() =>\n            isUserAuthenticated ? <Redirect to=\"/dashboard\" /> : <Login />\n          }\n        />\n      </>\n    );\n};\n\nexport default MainApp;\n"]},"metadata":{},"sourceType":"module"}