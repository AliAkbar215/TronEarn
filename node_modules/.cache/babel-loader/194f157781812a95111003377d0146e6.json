{"ast":null,"code":"var _jsxFileName = \"/home/hassan/blocTechProj/TRON_EARN/src/Components/Income/Income.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { environment } from \"../../environment\";\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from \"react-redux\"; // const TronWeb = require(\"tronweb\");\n// const TronGrid = require(\"trongrid\");\n\n/**\n * @author\n * @function\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Income = ({\n  tronWeb\n}) => {\n  _s();\n\n  const {\n    userIdForIncome\n  } = useSelector(state => state.UserReducer); // console.log(usersID,\"usersID\")\n\n  const [eventsArray, setEventsArray] = useState([]);\n  useEffect(() => {\n    if (tronWeb) {\n      tronWeb.getEventResult(environment.contractAddress, {\n        eventName: \"INCOME\" // size: 2,\n\n      }).then(res => {\n        // console.log(res)\n        setEventsArray(res);\n      }, [tronWeb]).catch(e => {});\n    }\n  }, [tronWeb]);\n  let EventsArray = eventsArray !== undefined && eventsArray !== null ? eventsArray : [];\n  console.log(\"EventsArray\", EventsArray); // const  FilterArray = EventsArray.filter((id)=> Number(id.result[0]=== Number(usersID)))\n\n  const FilterArray = EventsArray.filter(i => {\n    return +i.result[0] === Number(userIdForIncome);\n  }); // console.log(userIdForIncome,\"FilterArray\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-bordered\",\n      id: \"dataTable\",\n      width: \"100%\",\n      cellspacing: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"incomHeading\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"incomHeading\",\n            children: \"Level1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"incomHeading\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"incomHeading\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"incomHeading\",\n            children: \"View Txn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"incomHeading\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: FilterArray != undefined ? FilterArray.map(arr => {\n          // console.log(arr.result,\"arr\")\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"incomHeading\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: arr.result[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: arr.result[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tronWeb.fromSun(arr.result[3])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: arr.result[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://shasta.tronscan.org/#/transaction/${arr.transaction}`,\n                target: \"_blank\",\n                children: [arr.transaction.slice(0, 9), \"....\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment.unix(arr.result[4]).format(\"MMM Do YY\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this);\n        }) : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Income, \"oApUmprr7K5fODbBJdTddfsy4tQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Income;\nexport default Income;\n\nvar _c;\n\n$RefreshReg$(_c, \"Income\");","map":{"version":3,"sources":["/home/hassan/blocTechProj/TRON_EARN/src/Components/Income/Income.js"],"names":["React","useEffect","useState","environment","moment","useSelector","useDispatch","Income","tronWeb","userIdForIncome","state","UserReducer","eventsArray","setEventsArray","getEventResult","contractAddress","eventName","then","res","catch","e","EventsArray","undefined","console","log","FilterArray","filter","i","result","Number","map","arr","fromSun","transaction","slice","unix","format"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { environment } from \"../../environment\";\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// const TronWeb = require(\"tronweb\");\n// const TronGrid = require(\"trongrid\");\n/**\n * @author\n * @function\n **/\n\nconst Income = ({ tronWeb }) => {\n  const { userIdForIncome } = useSelector((state) => state.UserReducer);\n  // console.log(usersID,\"usersID\")\n  const [eventsArray, setEventsArray] = useState([]);\n  useEffect(() => {\n    if (tronWeb) {\n      tronWeb\n        .getEventResult(environment.contractAddress, {\n          eventName: \"INCOME\",\n          // size: 2,\n        })\n        .then(\n          (res) => {\n            // console.log(res)\n            setEventsArray(res);\n          },\n          [tronWeb]\n        )\n        .catch((e) => {});\n    }\n  }, [tronWeb]);\n  let EventsArray =\n    eventsArray !== undefined && eventsArray !== null ? eventsArray : [];\n  console.log(\"EventsArray\", EventsArray);\n  // const  FilterArray = EventsArray.filter((id)=> Number(id.result[0]=== Number(usersID)))\n\n  const FilterArray = EventsArray.filter((i) => {\n    return +i.result[0] === Number(userIdForIncome);\n  });\n  // console.log(userIdForIncome,\"FilterArray\")\n\n  return (\n    <div>\n      <table\n        class=\"table table-bordered\"\n        id=\"dataTable\"\n        width=\"100%\"\n        cellspacing=\"0\"\n      >\n        <thead>\n          <tr >\n            <th className=\"incomHeading\">User</th>\n            <th className=\"incomHeading\">Level1</th>\n            <th className=\"incomHeading\">Amount</th>\n            <th className=\"incomHeading\">Type</th>\n            <th className=\"incomHeading\">View Txn</th>\n            <th className=\"incomHeading\">Time</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {FilterArray != undefined\n            ? FilterArray.map((arr) => {\n                  // console.log(arr.result,\"arr\")\n                return (\n                  <tr className=\"incomHeading\">\n                    <td>{arr.result[0]}</td>\n                    <td>{arr.result[2]}</td>\n                    <td>{tronWeb.fromSun(arr.result[3])}</td>\n                    <td>{arr.result[1]}</td>\n                    <td>\n                      <a\n                        href={`https://shasta.tronscan.org/#/transaction/${arr.transaction}`}\n                        target=\"_blank\"\n                      >\n                        {arr.transaction.slice(0, 9)}....\n                      </a>\n                    </td>\n                    <td>{moment.unix(arr.result[4]).format(\"MMM Do YY\")}</td>\n                  </tr>\n                );\n              })\n            : []}\n          {/* <tr>\n                          <td>Tiger Nixon</td>\n                          <td>System Architect</td>\n                          <td>Edinburgh</td>\n                          <td>61</td>\n                          <td>2011/04/25</td>\n                          <td>$320,800</td>\n                        </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Income;\n"]},"metadata":{},"sourceType":"module"}