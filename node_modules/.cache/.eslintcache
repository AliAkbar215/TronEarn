[{"/home/hassan/blocTechProj/TRON_EARN/src/index.js":"1","/home/hassan/blocTechProj/TRON_EARN/src/reportWebVitals.js":"2","/home/hassan/blocTechProj/TRON_EARN/src/App.js":"3","/home/hassan/blocTechProj/TRON_EARN/src/mainApp.jsx":"4","/home/hassan/blocTechProj/TRON_EARN/src/redux/store/index.js":"5","/home/hassan/blocTechProj/TRON_EARN/src/views/Header.jsx":"6","/home/hassan/blocTechProj/TRON_EARN/src/Components/Auth/signIn.jsx":"7","/home/hassan/blocTechProj/TRON_EARN/src/redux/store/combineReducers.js":"8","/home/hassan/blocTechProj/TRON_EARN/src/redux/actions/index.js":"9","/home/hassan/blocTechProj/TRON_EARN/src/Dashboard/index.jsx":"10","/home/hassan/blocTechProj/TRON_EARN/src/redux/reducers/userReducer.js":"11","/home/hassan/blocTechProj/TRON_EARN/src/environment.js":"12","/home/hassan/blocTechProj/TRON_EARN/src/Components/Income/Income.js":"13","/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Downline/index.js":"14","/home/hassan/blocTechProj/TRON_EARN/src/Components/SideBar/index.jsx":"15","/home/hassan/blocTechProj/TRON_EARN/src/Components/Header/index.jsx":"16","/home/hassan/blocTechProj/TRON_EARN/src/Components/Footer/index.jsx":"17","/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Home/index.jsx":"18","/home/hassan/blocTechProj/TRON_EARN/src/views/Question.js":"19"},{"size":500,"mtime":1614691565000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1614691565000,"results":"22","hashOfConfig":"21"},{"size":1387,"mtime":1617881499774,"results":"23","hashOfConfig":"21"},{"size":2973,"mtime":1618295767836,"results":"24","hashOfConfig":"21"},{"size":457,"mtime":1614691565000,"results":"25","hashOfConfig":"21"},{"size":16524,"mtime":1618222907692,"results":"26","hashOfConfig":"21"},{"size":9074,"mtime":1618227244028,"results":"27","hashOfConfig":"21"},{"size":183,"mtime":1614691565000,"results":"28","hashOfConfig":"21"},{"size":18165,"mtime":1618292967871,"results":"29","hashOfConfig":"21"},{"size":2119,"mtime":1615811086000,"results":"30","hashOfConfig":"21"},{"size":5182,"mtime":1618233191284,"results":"31","hashOfConfig":"21"},{"size":844,"mtime":1618233920646,"results":"32","hashOfConfig":"21"},{"size":3095,"mtime":1618224683976,"results":"33","hashOfConfig":"21"},{"size":1867,"mtime":1617866920484,"results":"34","hashOfConfig":"21"},{"size":6360,"mtime":1615808517000,"results":"35","hashOfConfig":"21"},{"size":2407,"mtime":1615549250000,"results":"36","hashOfConfig":"21"},{"size":610,"mtime":1614691565000,"results":"37","hashOfConfig":"21"},{"size":30671,"mtime":1618292583729,"results":"38","hashOfConfig":"21"},{"size":9085,"mtime":1617869364120,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"15yh206",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"/home/hassan/blocTechProj/TRON_EARN/src/index.js",[],["89","90"],"/home/hassan/blocTechProj/TRON_EARN/src/reportWebVitals.js",[],"/home/hassan/blocTechProj/TRON_EARN/src/App.js",["91","92"],"import logo from \"./logo.svg\";\nimport React from \"react\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Home from \"./mainApp\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./UI/ui/ui8d.css\";\nimport './UI/ui/styles1.css';\n// import './UI/ui/loader.css';\n\n\n\nfunction App() {\n  React.useEffect(() => {\n    var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\n    $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function () {\n      if (this.href === path) {\n        $(this).addClass(\"active\");\n      }\n    });\n\n    // Toggle the side navigation\n    $(\"#sidebarToggle\").on(\"click\", function (e) {\n      e.preventDefault();\n      $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (window.location.href.includes(\"?ref=\")) {\n      let getAddress = window.location.href.split(\"?ref=\")[1];\n      let final = getAddress.slice(0, 42);\n      localStorage.setItem(\"TRON_EARN_REF\", final);\n    }\n  }, []);\n\n  return (\n    <>\n      <ToastContainer />\n      <Provider store={store}>\n        <BrowserRouter>\n          <Home />\n        </BrowserRouter>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","/home/hassan/blocTechProj/TRON_EARN/src/mainApp.jsx",["93","94","95","96","97","98"],"/home/hassan/blocTechProj/TRON_EARN/src/redux/store/index.js",[],"/home/hassan/blocTechProj/TRON_EARN/src/views/Header.jsx",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport svg from \"../UI/ui/like.svg\";\nimport Fade from \"react-reveal/Fade\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { Link } from \"react-router-dom\";\nimport PdfPlan from \"../Components/assets/pdfPlan/TronEarns.pdf\";\nimport Question from \"./Question\";\n\n\nexport default function Header() {\n\n      \n   \n  const ToggleMenues = () => {\n    let ele = document.getElementsByClassName(\"coinz-page-content-fullwidth\");\n    ele[0].style.opacity = \"0.4\";\n\n    let doc = document.getElementById(\"coinz-side-menu\");\n\n    doc.style.display = \"block\";\n    doc.style.left = \"0\";\n  };\n\n  const cloSEbar = () => {\n    let ele = document.getElementsByClassName(\"coinz-page-content-fullwidth\");\n    ele[0].style.opacity = \"1\";\n    let doc = document.getElementById(\"coinz-side-menu\");\n\n    doc.style.display = \"none\";\n    doc.style.left = \"-30\";\n  };\n\n  return (\n    <div className=\"home page-template page-template-templates page-template-template-full-width page-template-templatestemplate-full-width-php page page-id-4446 page-child parent-pageid-10 woocommerce-no-js wpb-js-composer js-comp-ver-5.4.7 vc_responsive\">\n      <div class=\"main-wrapper\">\n        <div id=\"header\">\n          <div id=\"header-ticker-holder\" class=\" \">\n            <div class=\"container\">\n              <div id=\"header-ticker-wrapper\"></div>\n            </div>\n          </div>\n          <div id=\"header-nav-holder\" class=\"coinzfactory-default\">\n            <div class=\"header-nav header-nav-default header-nav-fixed\">\n              <div\n                style={{\n                  display: \"flex\",\n                  width: \"100%\",\n                  margin: \"0px auto\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <div class=\"logo-main\" style={{ flex: \"1 1 10%\" }}>\n                  <a class=\"logo-wrapper\">\n                    <img src=\"logo.png\" class=\"lgo\" />\n                  </a>\n                </div>\n\n                <div class=\"coinz-menu-wrapper\" style={{ flex: \"1 1 47%\" }}>\n                  <a\n                    href=\"#coinz-side-menu\"\n                    class=\"coinz-trigger icon-mobile-menu \"\n                    id=\"mobile-menu\"\n                    onClick={ToggleMenues}\n                  >\n                    <span class=\"icon-wrap coinz-middle-line\"></span>\n                    <span class=\"icon-wrap coinz-top-line\"></span>\n                    <span class=\"icon-wrap coinz-bottom-line\"></span>\n                  </a>\n                </div>\n\n                <ul\n                  className=\"navUl\"\n                  style={{\n                    display: \"flex\",\n                    flex: 3,\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <li class=\"menu-item  menu-item-object-page current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children   \">\n                    <a class=\"menu-button-4445 \">\n                      <span>Home</span>\n                    </a>\n                  </li>\n                  <li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children   td-menu-item-4458\">\n                    <a class=\"menu-button-4458 \">\n                      <span>About </span>\n                    </a>\n                  </li>\n                  <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4469\">\n                    <a class=\"menu-button-4469 \">\n                      <span>Contact</span>\n                    </a>\n                  </li>\n                  <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4495\">\n                    <a class=\"menu-button-4495 \">\n                      <span>How it works</span>\n                    </a>\n                  </li>\n                  <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4495\">\n                    <a class=\"menu-button-4495 \">\n                      <span>FAQ</span>\n                    </a>\n                  </li>\n                  <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4495\">\n                    <a class=\"menu-button-4495 \" href={PdfPlan} download>\n                      <span>Download</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        <div class=\"coinz-content-wrapper\">\n          <div class=\"\">\n            <div class=\"coinz-page-content-fullwidth  \" onClick={cloSEbar}>\n              <div class=\"overflow\" style={{ display: \"block\" }}>\n              <Fade top>\n           \n                <div class=\"main\">\n                  <div class=\"container relative clearfix\">\n                    <div class=\"main-section-right\">\n                      <div class=\"main-section-right-top\">\n                        <script\n                          type=\"text/javascript\"\n                          src=\"https://files.coinmarketcap.com/static/widget/currency.js\"\n                        ></script>\n                        <div\n                          class=\"coinmarketcap-currency-widget\"\n                          data-currencyid=\"1958\"\n                          data-base=\"USD\"\n                          data-secondary=\"\"\n                          data-ticker=\"false\"\n                          data-rank=\"false\"\n                          data-marketcap=\"false\"\n                          data-volume=\"false\"\n                          data-statsticker=\"true\"\n                          data-stats=\"USD\"\n                        ></div>\n                        <div class=\"main-section-right-bottom\"></div>\n                      </div>\n                    </div>\n                    <div class=\"city1\">\n                      <img src=\"/img/city.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"main-section-left\" >\n                      <h1>\n                        TronEarn<span>.</span>Live\n                      </h1>\n                      <Link\n                        className=\"btn bg \"\n                        id=\"logBtn\"\n                        to=\"/login\"\n                        title=\"Try Demo\"\n                      >\n                        Login\n                      </Link>\n                      \n                    </div>\n                    \n                    <div class=\"statistics\">\n                      <div class=\"statistics-block\">\n                        <span>900 TRX</span>\n                        <p>Registration</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                </Fade>\n                <div class=\" container \">\n                  <div class=\"worldwide\">\n                    <div class=\"column\">\n                      <div class=\"worldwide-title\">\n                        WORLDWIDE DECENTERLIZE BASE\n                      </div>\n                      <div class=\"worldwide-block\">\n                        {/* <b>Donate 20 TRX Earn 245,640+ TRX</b> */}\n                        <p>Attractive Direct Income</p>\n                        <p>12 Super Base Income</p>\n                        <p>Infinite Time Limit</p>\n                      </div>\n                      <div class=\"worldwide-block\">\n                        <b>Entry With 900 TRX</b>\n                        <p>Registration With 20 TRX</p>\n                        <p>Buy Base 1 With 20 TRX</p>\n                        <p>Do Unlimited Direct Referrals</p>\n                      </div>\n                    </div>\n                    <div class=\"column\">\n                      <div class=\"worldwide-title\">TRON BLOCKCHAIN SYSTEM</div>\n                      <div class=\"worldwide-block\">\n                        <b>No Hacking</b>\n                        <p>Secured System.</p>\n                        <p>Decentralized</p>\n                        <p>Transparent</p>\n                      </div>\n                      <div class=\"worldwide-block\">\n                        <b>Detailed Note</b>\n                        <p>\n                          Start Referring Members, Get 900 TRX For Direct\n                          Referral\n                        </p>\n                        <p>Enter In Bases And Get Donations</p>\n                        <p>\n                          Get Base Income On First Come And First Serve Basics\n                        </p>\n                      </div>\n                    </div>\n                    <div class=\"cube\">\n                      <img src=\"/img/icons/cube.svg\" alt=\"\" />\n                    </div>\n                  </div>\n                  <div id=\"how-to-start\" class=\"how-to-start\">\n                    <div class=\"how-to-start-img\">\n                      <img src=\"/img/how-to-start.svg\" alt=\"\" />\n                    </div>\n                    <h2>\n                      How To Start One Line\n                      <br /> Worldwide Base ?\n                    </h2>\n                    <div class=\"how-to-start-block\">\n                      <b>LET’S START UNSTOPPABLE TronEarn.live</b>\n                    </div>\n                    <div class=\"how-to-start-block\">\n                      <b>INSTANT P2P MULTI PAYMENTS</b>\n                      <p>\n                        Startup Amount instantly distributed according to smart\n                        contract protocols as direct income above the joined\n                        users according to Line of sponsors.\n                      </p>\n                    </div>\n                    <div class=\"cube2\">\n                      <img src=\"/img/icons/cube2.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"cube3\">\n                      <img src=\"/img/icons/cube3.svg\" alt=\"\" />\n                    </div>\n                  </div>\n                  <div id=\"how-it-works\" class=\"how-it-works\">\n                    <div class=\"how-it-works-img\">\n                      <img src=\"./assets/img/how-it-works.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"how-it-works-content\">\n                      <h3>How It Works</h3>\n                      <ul>\n                        <li>WorldWide One line (Matrix 2x2) structure.</li>\n                        <li>\n                          Every new user will be placed under previous joined\n                          user according to Base Entry amount transaction\n                          ’Timestamp.’\n                        </li>\n                        <li>\n                          Timestamp : It is recorded by the Tron Blockchain that\n                          gives the received time of the respective\n                          transactions.\n                        </li>\n                        <li>\n                          One Line : Every new user pays entry amount to\n                          previous joined user 100% from user’s wallet to user’s\n                          wallet. (Pee to peer )\n                        </li>\n                        <li>\n                          TigersTron Base : One line Base structure is\n                          irrespective to referral line or sponsors line. Hence\n                          this is real One line WorldWide Base system gives\n                          opportunity to earn passive income by TigersTron\n                          growth of Unstoppable ‘TigersTron’\n                        </li>\n                        <li>\n                          Pool Entry Protocols : Base 1 to 12 entry protocols\n                          are deployed and written on smart contract code.\n                        </li>\n                        <li>\n                          Every New user starts from Base 1. It’s mandatory to\n                          enter new Base in connective way.\n                        </li>\n                        <li>\n                          Base one line structure is based on first enter first\n                          get paid protocol.\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"cube4\">\n                      <img src=\"/img/icons/cube4.svg\" alt=\"\" />\n                    </div>\n                  </div>\n                  <div class=\"referral-income\">\n                    <div class=\"column\">\n                      <h3>Referral Income</h3>\n                      <p>TronEarn.live is having 12 Worldwide A/</p>\n                    </div>\n                  </div>\n                  <div class=\"real-one-line\">\n                    <h4>\n                      Real One Line Worldwide 12\n                      <br /> Bases\n                    </h4>\n                    <p>\n                      Worldwide One line base is connected to each other in\n                      consecutive\n                      <br /> way. From 1 to 12 Autopools multiply your 20 TRX to\n                      245,640 TRX\n                    </p>\n\n                    <p>\n                      ! 12 REAL ONE LINE WORLDWIDE BASES ! ! CONVERT 20 TO\n                      245,640 TRX !\n                    </p>\n                  </div>\n\n                  <Question />\n\n                  <div id=\"contract\" class=\"smart-contract\">\n                    <div class=\"smart-contract-title\">\n                      Smart Contract Address\n                    </div>\n                    <p>\n                      A contract paper is an authoritative report or guide that\n                      informs readers concisely about a complex issue and\n                      presents the issuing body's philosophy on the matter. It\n                      is meant to help readers understand an issue, solve a\n                      problem, or make a decision.\n                    </p>\n                    <a\n                      href=\"https://tronscan.org/#/contract/TQPJS5zEdMV6JxVUfo93HbYYBVG6Dm2dwo/code\"\n                      target=\"_blank\"\n                      class=\"btn view\"\n                    >\n                      View\n                    </a>\n                    <div class=\"cube5\">\n                      <img src=\"/img/icons/cube5.svg\" alt=\"\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"coinz-side-menu\" class=\"coinz-side-menu\">\n          <div class=\"coinz-side-top\">\n            <div class=\"logo-for-panel\">\n              <a class=\"blog-logo-image light-logo\" href=\"#\" rel=\"home\">\n                <img src=\"wp-content/logo-header.png\" />{\" \"}\n              </a>\n            </div>\n          </div>\n\n          <div class=\"coinz-side-inner\">\n            <ul class=\"coinz-side-inner-menu\">\n              <li class=\"menu-item menu-item-type-post_type menu-item-object-page current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children   td-menu-item-4445\">\n                <a class=\"menu-button-4445 \">\n                  <span>Home</span>\n                </a>\n              </li>\n              <li class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children   td-menu-item-4458\">\n                <a class=\"menu-button-4458 \">\n                  <span>About </span>\n                </a>\n              </li>\n              <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4469\">\n                <a class=\"menu-button-4469 \">\n                  <span>Contact</span>\n                </a>\n              </li>\n              <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4495\">\n                <a class=\"menu-button-4495 \">\n                  <span>How it works</span>\n                </a>\n              </li>\n              <li class=\"menu-item menu-item-type-post_type menu-item-object-page   td-menu-item-4495\">\n                <a class=\"menu-button-4495 \">\n                  <span>Faq</span>\n                </a>\n              </li>\n              <li\n                id=\"menu-item-4491\"\n                class=\"coinz-cta-v2 menu-item menu-item-type-custom menu-item-object-custom menu-item-4491\"\n              >\n                <a href={PdfPlan} download>\n                  Download\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/hassan/blocTechProj/TRON_EARN/src/Components/Auth/signIn.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport './sign.css'\nimport {\n  RegisterAction,\n  AutoLoginAction,\n  ViewAction,\n} from \"../../redux/actions\";\nimport axios from \"axios\";\n\n/**\n * @author\n * @function Login\n **/\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { userWalletAddress } = useSelector((state) => state.UserReducer);\n  const [referrerAdd, setReferrerAdd] = React.useState(userWalletAddress);\n  let getRef = localStorage.getItem(\"TRON_EARN_REF\");\n  const [userIdForView, setUserIdForView] = React.useState(\n    getRef ? getRef : \"\"\n  );\n\n  const RegisterFunction = () => {\n    // if (referrerAdd === \"\") {\n    //   toast.error(\"please enter refer address\");\n    // } else {\n    dispatch(RegisterAction(referrerAdd));\n    // }\n  };\n\n  const AutoLoginFunction = () => {\n    dispatch(AutoLoginAction());\n  };\n\n  const ViewFunction = () => {\n    dispatch(ViewAction(userIdForView));\n  };\n\n  return (\n    <>\n   \n\n      <div class=\"main-wrapper\">\n        <div class=\"account-content\">\n          <div class=\"container\">\n            <div class=\"account-box\">\n              <div class=\"account-wrapper\">\n                <div class=\"account-logo\">\n                  <a href=\"#\">\n                    <img style={{marginTop:\"4em\"}}\n                      src=\"/img/nav_logo.png\"\n                      alt=\"tronlink\"\n                    />\n                  </a>\n                </div>\n                {/* <h3 class=\"account-title\">Login</h3> */}\n                <div class=\"form-group text-center\">\n                    <button\n                      class=\"btn btn-primary account-btn\"\n                      type=\"button\"\n                      onClick={AutoLoginFunction}\n                    >\n                       {userWalletAddress ? \"AUTO LOGIN\" : \"Loading...\"}\n                    </button>\n                  </div>\n                <p class=\"account-subtitle\">Access to our dashboard</p>\n\n                <div class=\"account-logo\">\n                  <a href=\"javascript:login(0)\">\n                    <img\n                      src=\"https://tronpool.online/images/tronlink.png\"\n                      alt=\"tronlink\"\n                      style={{ height: \"75px\", width: \"75px\" }}\n                    />\n                  </a>\n                  <a href=\"javascript:login(0)\">\n                    <img\n                      src=\"https://tronpool.online/images/tronwallet.png\"\n                      alt=\"tronwallet\"\n                      style={{ height: \"75px\", width: \"75px\" }}\n                    />\n                  </a>\n                  <a href=\"javascript:login(0)\">\n                    <img\n                      src=\"https://tronpool.online/images/token-pocket.png\"\n                      alt=\"token-pocket\"\n                      style={{ height: \"75px\", width: \"75px\" }}\n                    />\n\n                  </a>\n                  <a href=\"javascript:login(0)\">\n                    <img\n                      src=\"https://tronpool.online/images/dapp-pocket.png\"\n                      alt=\"dapp-pocket\"\n                      style={{ height: \"75px\", width: \"75px\" }}\n                    />\n                  </a>\n                </div>\n\n                <div>\n                  <div class=\"form-group\">\n                    <div class=\"input-group mb-3\">\n                     <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text bg-transparent\">\n                        <i class=\"fa fa-users\"></i>\n                      </span>\n                    </div>\n                    <input\n                      type=\"text\"\n                      class=\"form-control pl-15 bg-transparent\"\n                      placeholder=\"View\"\n                      value={userIdForView}\n                      onChange={(e) => {\n                        setUserIdForView(e.target.value);\n                      }}\n                    />\n                    <input\n                      type=\"hidden\"\n                      name=\"type\"\n                      value=\"VIEW\"\n                      id=\"type\"\n                      readonly=\"true\"\n                    />\n                     <div class=\"col-lg-12 \">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={ViewFunction}\n                    >\n                      View\n                    </button>\n                  </div>\n                  </div>\n                \n                </div>\n\n                  <div class=\"form-group text-center\">\n                    <button\n                      class=\"btn btn-primary account-btn\"\n                      type=\"button\"\n                      onClick={RegisterFunction}\n                    >\n                       {userWalletAddress ? \"Login\" : \"Loading...\"}\n                    </button>\n                  </div>\n                  {/* <div class=\"account-footer\">\n                    <p>\n                      Don't have an account yet?{\" \"}\n                      <a href=\"https://tronpool.online/dashboard/register.html\">\n                        Register\n                      </a>\n                    </p>\n                  </div> */}\n                  {/* <div class=\"account-footer m-t-10\">\n                    <p>\n                      Smart Contract Address{\" \"}\n                      <a\n                        href=\"#\"\n                        id=\"contractAddress\"\n                        style={{color: \"#fc6075\"}}\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                      </a>\n                    </p>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n\n\n\n   {/* <div\n        class=\"w-100\"\n        style={{\n          width: \"100%\",\n          background: 'url(\"https://tronsquire.io/images/bg-2-1.jpg\")',\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            className=\"set_login_width_style\"\n            style={{\n              backgroundColor: \"white\",\n              width: \"40%\",\n              borderRadius: \"10px\",\n              textAlign: \"center\",\n              padding: 30,\n            }}\n           >\n            <div>\n              <h2 style={{ fontSize: 20, marginBottom: 20 }}>\n                Register OR AutoLogin\n              </h2>\n\n              <div class=\"row\" style={{ marginTop: 20 }}>\n                <div\n                  class=\"col-lg-6 col-xs-12 text-center\"\n                  style={{ marginTop: 10, marginBottom: 10 }}\n                >\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-info margin-top-10\"\n                    onClick={RegisterFunction}\n                  >\n                    {userWalletAddress ? \"REGISTER\" : \"Loading...\"}\n                  </button>\n                </div>\n                <div\n                  class=\"col-lg-6 col-xs-12 text-center\"\n                  style={{ marginTop: 10, marginBottom: 10 }}\n                >\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-info margin-top-10\"\n                    onClick={AutoLoginFunction}\n                  >\n                    {userWalletAddress ? \"AUTO LOGIN\" : \"Loading...\"}\n                  </button>\n                </div>\n                <div class=\"col-lg-12\" style={{ marginTop: 20 }}>\n                  <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text bg-transparent\">\n                        <i class=\"fa fa-users\"></i>\n                      </span>\n                    </div>\n                    <input\n                      type=\"text\"\n                      class=\"form-control pl-15 bg-transparent\"\n                      placeholder=\"View\"\n                      value={userIdForView}\n                      onChange={(e) => {\n                        setUserIdForView(e.target.value);\n                      }}\n                    />\n                    <input\n                      type=\"hidden\"\n                      name=\"type\"\n                      value=\"VIEW\"\n                      id=\"type\"\n                      readonly=\"true\"\n                    />\n                  </div>\n                  <div class=\"col-lg-12\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={ViewFunction}\n                    >\n                      View\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    */}","/home/hassan/blocTechProj/TRON_EARN/src/redux/store/combineReducers.js",[],"/home/hassan/blocTechProj/TRON_EARN/src/redux/actions/index.js",["130","131","132","133"],"import { toast } from \"react-toastify\";\nimport { environment } from \"../../environment\";\n\nexport const RegisterAction = (referrerAddress) => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n\n  let getRefAddress = localStorage.getItem(\"TRON_EARN_REF\");\n  let getDirectFromUrl;\n\n  let url = window.location.href;\n\n  if (url.includes(\"?ref=\")) {\n    let getAddress = url.split(\"?ref=\")[1];\n    let final = getAddress.slice(0, 1);\n    getDirectFromUrl = final;\n  }\n\n  if (userWalletAddress) {\n    contract\n      .register(\n        getDirectFromUrl ? getDirectFromUrl : getRefAddress ? getRefAddress : 1\n      )\n      .send({\n        feeLimit: 100_000_000,\n        callValue: state().UserReducer.tronWeb.toSun(900),\n      })\n      .then(() => {\n        toast.success(\"registered successfully!\");\n      })\n      .catch((err) => {\n        toast.error(\"something went wrong!\");\n      });\n  }\n\n  // if (userWalletAddress) {\n  //   await state()\n  //     .UserReducer.contract.getStationInfo(\n  //       state().UserReducer.userWalletAddress,\n  //       1\n  //     )\n  //     .call()\n  //     .then(async (val) => {\n  //       if (val[0]) {\n  //         toast.error(\"user already exist please do autoLogin!\");\n  //       } else {\n  //         await state()\n  //           .UserReducer.contract.Level1(\n  //             getDirectFromUrl\n  //               ? getDirectFromUrl\n  //               : getRefAddress\n  //               ? getRefAddress\n  //               : environment.defaultRefAddress\n  //           )\n  //           .send({\n  //             feeLimit: 100_000_000,\n  //             callValue: state().UserReducer.tronWeb.toSun(900),\n  //           })\n  //           .then(async (val) => {\n  //             toast.success(\"confirmed please try to autologin\");\n  //           });\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       toast.error(\"something went wrong!\");\n  //     });\n  // }\n};\n\nexport const AutoLoginAction = () => async (dispatch, state) => {\n  // console.log(\"clicked\",state().UserReducer.userWalletAddress);\n  if (state().UserReducer.userWalletAddress) {\n    await state()\n      .UserReducer.contract.getStationInfo(\n        state().UserReducer.userWalletAddress,\n        1\n      )\n      .call()\n      .then(async (val) => {\n        if (val[0]) {\n          dispatch({\n            type: \"USER_AUTHENTICATED\",\n          });\n        } else {\n          toast.error(\"user not found please do register!\");\n        }\n        localStorage.setItem(\"isAuth\", val[0]);\n      })\n      .catch((err) => {\n        toast.error(\"something went wrong!\");\n      });\n  }\n};\n\nexport const ViewAction = (id) => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n\n  contract\n    .idtoaddress(id)\n    .call()\n    .then((val) => {\n      if (\n        tronWeb.address.fromHex(val) != \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\n      ) {\n        dispatch({\n          type: \"USER_WALLET_ADDRESS\",\n          payload: tronWeb.address.fromHex(val),\n        });\n\n        dispatch({\n          type: \"USER_AUTHENTICATED\",\n        });\n        dispatch({\n          type: \"CLICKED_FOR_VIEW\",\n        });\n        localStorage.setItem(\"isAuth\", true);\n        localStorage.setItem(\"clickedForView\", tronWeb.address.fromHex(val));\n      }\n      // console.log(\"here is the value\", tronWeb.address.fromHex(val));\n    });\n};\n\nexport const CheckCurrentUser = (defaultAddress, tronweb, auth) => async (\n  dispatch\n) => {\n  tronweb\n    .contract()\n    .at(environment.contractAddress)\n    .then(async (contract) => {\n      // let getT = tronweb.trx\n      //   .getTransactionInfo(\n      //     \"9ec68aba8c082c61173cbfb8bbf4582afa15d086b50b6f45a81e7689ab303722\"\n      //   )\n      //   .then((val) => {\n      //     console.log(\"here we go===========>\", val);\n      //   });\n\n      // console.log(\"================>\", getT);\n\n      contract\n        .getStationInfo(defaultAddress, 1)\n        .call()\n        .then((val) => {\n          if (val[0]) {\n            dispatch({\n              type: \"AUTH\",\n              payload: auth,\n            });\n          } else {\n            dispatch({\n              type: \"AUTH_FAILED\",\n            });\n          }\n        });\n    });\n};\n\nconst binaryTree = {\n  name: \"\",\n  children: [\n    {\n      name: \"\",\n\n      children: [\n        {\n          name: \"\",\n        },\n        {\n          name: \"\",\n        },\n      ],\n    },\n    {\n      name: \"\",\n\n      children: [\n        {\n          name: \"\",\n        },\n        {\n          name: \"\",\n        },\n      ],\n    },\n  ],\n};\n\nexport const UserDataAction = (defaultAddress, tronweb) => async (dispatch) => {\n  // console.log(\"called\", auth);\n\n  if (defaultAddress) {\n    tronweb\n      .contract()\n      .at(environment.contractAddress)\n      .then(async (contract) => {\n        //user wallet address\n        dispatch({\n          type: \"USER_WALLET_ADDRESS\",\n          payload: defaultAddress,\n        });\n\n        let DownLinde = [];\n        contract\n          .getdirects(defaultAddress)\n          .call()\n          .then(async (val) => {\n            // console.log(\"this is  getdirects\");\n            dispatch({\n              type: \"DOWNLINE_COUNT\",\n              payload: val.arr,\n            });\n\n            //binary tree\n            await contract\n              .users(defaultAddress)\n              .call()\n              .then((val) => {\n                // console.log(val.registrationid.toNumber(), \"this is the value\");\n                binaryTree.name = val.registrationid.toNumber();\n              });\n\n            if (val.arr.length) {\n              for (let a = 1; a >= 0; a--) {\n                // console.log(\"=====>\",a);\n                let cond = a === 1 ? 0 : 1;\n                // console.log(cond);\n                if (val.arr[cond]) {\n                  await contract\n                    .users(tronweb.address.fromHex(val.arr[cond]))\n                    .call()\n                    .then((user) => {\n                      binaryTree.children[\n                        a\n                      ].name = user.registrationid.toNumber();\n                    });\n                }\n\n                // if (val.arr.length) {\n                //   await contract\n                //     .getdirects(tronweb.address.fromHex(val.arr[1]))\n                //     .call()\n                //     .then(async (value) => {\n                //       console.log('value====', value);\n\n                //       if (value.arr[a]) {\n                //         await contract\n                //           .users(tronweb.address.fromHex(value.arr[a]))\n                //           .call()\n                //           .then((user) => {\n                //             binaryTree.children[0].children[\n                //               cond\n                //             ].name = user.registrationid.toNumber();\n                //           });\n                //       }\n\n                //     });\n\n                //   if (val.arr[0]) {\n                //     await contract\n                //       .getdirects(tronweb.address.fromHex(val.arr[0]))\n                //       .call()\n                //       .then(async (value) => {\n                //         if (value.arr[a]) {\n                //           await contract\n                //             .users(tronweb.address.fromHex(value.arr[a]))\n                //             .call()\n                //             .then((user) => {\n                //               binaryTree.children[1].children[\n                //                 cond\n                //               ].name = user.registrationid.toNumber();\n                //             });\n                //         }\n                //       });\n                //   }\n                // }\n              }\n            }\n\n            dispatch({\n              type: \"BINARY_TREE\",\n              payload: binaryTree,\n            });\n\n            // console.log(\"=====>\",binaryTree);\n          });\n          \n\n        //new users\n\n        contract\n          .users(defaultAddress)\n          .call()\n          .then((val) => {\n            // console.log(\"==========new\", val);\n            dispatch({\n              type: \"WITHDRAW_ABLE\",\n              payload: tronweb.fromSun(val.withdrawable),\n            });\n\n            dispatch({\n              type: \"USERS_ID\",\n              payload: val.registrationid.toNumber(),\n            });\n\n            dispatch({\n              type: \"USERS_ID_FOR_INCOME\",\n              payload: val.registrationid.toNumber(),\n            });\n\n            dispatch({\n              type: \"LEVEL_REWARD\",\n              payload: tronweb.fromSun(val.LevelReward),\n            });\n            dispatch({\n              type: \"MATRIX_INCOME\",\n              payload: tronweb.fromSun(val.MatrixReward),\n            });\n            dispatch({\n              type: \"DIRECT_REFERRALS\",\n              payload: val.referredUsers.toNumber(),\n            });\n            dispatch({\n              type: \"LEVEL_INCOME\",\n              payload: tronweb.fromSun(val.LevelReward),\n            });\n\n            dispatch({\n              type: \"UPLINE_INCOME\",\n              payload: tronweb.fromSun(val.uplineincome),\n            });\n            dispatch({\n              type: \"TOTAL_INCOME\",\n              payload: tronweb.fromSun(val.income),\n            });\n            dispatch({\n              type:\"DIRECT_SPONSOR\",\n              payload:tronweb.address.fromHex(val.referrer)\n            })\n\n            dispatch({\n              type: \"DIRECT_INCOME\",\n              payload: tronweb.fromSun(val.getdirects),\n            });\n          });\n\n        // users to show the direct income\n        await contract\n          .users(defaultAddress)\n          .call()\n          .then((val) => {\n            // console.log(\"==========refIcome\",val);\n            dispatch({\n              type: \"REF_INCOME\",\n              dispatch: tronweb.fromSun(val.refincome),\n            });\n          });\n\n        //getUserDownline\n        await contract\n          .getUserDownlineCount(defaultAddress)\n          .call()\n          .then((val) => {\n            //  console.log(\"=========valofarr\",val.arr[0].toNumber());\n            const vaToNumber = val.arr.map((a) => a.toNumber());\n            const getUserDownLine = vaToNumber.reduce(\n              (accumulator, currentValue) => accumulator + currentValue\n            );\n\n            dispatch({\n              type: \"GET_USERDOWNLINE\",\n              payload: getUserDownLine,\n            });\n          });\n\n        //contract\n        dispatch({\n          type: \"CONTRACT\",\n          payload: contract,\n        });\n\n        //tronweb\n        dispatch({\n          type: \"TRONWEB\",\n          payload: tronweb,\n        });\n\n        // business stations\n        for (let i = 1; i <= 7; i++) {\n          await contract\n            .getStationInfo(defaultAddress, i)\n            .call()\n            .then((val) => {\n              dispatch({\n                type: `STATION_${i}`,\n                payload: val[0],\n              });\n            });\n        }\n\n        //smart matrix\n\n        //smart level 1\n        await contract\n          .getStationInfo(defaultAddress, 8)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"SMART_MATRIX_LEVEL_ONE\",\n              payload: val[0],\n            });\n          });\n\n        //smart level 2\n        await contract\n          .getStationInfo(defaultAddress, 9)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"SMART_MATRIX_LEVEL_TWO\",\n              payload: val[0],\n            });\n          });\n\n        //silver matrix\n\n        //sliver level 1\n        await contract\n          .getStationInfo(defaultAddress, 10)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"SILVER_MATRIX_LEVEL_ONE\",\n              payload: val[0],\n            });\n          });\n\n        //silver level 2\n        await contract\n          .getStationInfo(defaultAddress, 11)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"SILVER_MATRIX_LEVEL_TWO\",\n              payload: val[0],\n            });\n          });\n\n        // gold matrix\n\n        //gold level 1\n        await contract\n          .getStationInfo(defaultAddress, 12)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"GOLD_MATRIX_LEVEL_ONE\",\n              payload: val[0],\n            });\n          });\n\n        //gold level 2\n        await contract\n          .getStationInfo(defaultAddress, 13)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"GOLD_MATRIX_LEVEL_TWO\",\n              payload: val[0],\n            });\n          });\n\n        // Royal matrix\n\n        //Royal level 1\n        await contract\n          .getStationInfo(defaultAddress, 14)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"ROYAL_MATRIX_LEVEL_ONE\",\n              payload: val[0],\n            });\n          });\n\n        //Royal level 2\n        await contract\n          .getStationInfo(defaultAddress, 15)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"ROYAL_MATRIX_LEVEL_TWO\",\n              payload: val[0],\n            });\n          });\n\n        // Crown matrix\n\n        //Crown level 1\n        await contract\n          .getStationInfo(defaultAddress, 16)\n          .call()\n          .then((val) => {\n            dispatch({\n              type: \"CROWN_MATRIX_LEVEL_ONE\",\n              payload: val[0],\n            });\n          });\n\n        //Crown level 2\n        await contract\n          .getStationInfo(defaultAddress, 17)\n          .call()\n          .then((val) => {\n            \n            dispatch({\n              type: \"CROWN_MATRIX_LEVEL_TWO\",\n              payload: val[0],\n            });\n          });\n      });\n  }\n};\n\nexport const smartMatrixAction = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .SMARTMATRIX(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(5000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const smartMatrixLevel2Action = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .SMARTMATRIX2(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(10000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const silverMatrixAction = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .SILVERMATRIX(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(50000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const silverMatrixLevel2Action = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .SILVERMATRIX2(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(100000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const goldMatrixAction = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .GOLDMATRIX(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(100000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const goldMatrixLevel2Action = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .GOLDMATRIX2(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(200000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const royalMatrixAction = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .ROYALMATRIX(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(500000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const royalMatrixLevel2Action = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .ROYALMATRIX2(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(1000000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const crownMatrixAction = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .CROWNMATRIX(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(5000000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const crownMatrixLevel2Action = () => async (dispatch, state) => {\n  const { contract, userWalletAddress, tronWeb } = state().UserReducer;\n  await contract\n    .CROWNMATRIX2(userWalletAddress)\n    .send({\n      feeLimit: 100_000_000,\n      callValue: state().UserReducer.tronWeb.toSun(10000000),\n    })\n    .then(() => {\n      dispatch(UserDataAction(tronWeb.defaultAddress.base58, tronWeb));\n    });\n};\n\nexport const LogoutAction = () => async (dispatch) => {\n  dispatch({\n    type: \"LOGOUT\",\n  });\n  localStorage.removeItem(\"isAuth\");\n  localStorage.removeItem(\"clickedForView\");\n  window.location.reload();\n};\n","/home/hassan/blocTechProj/TRON_EARN/src/Dashboard/index.jsx",["134"],"import React, { useEffect, useState } from \"react\";\nimport Home from \"../Components/Dashboard/Home\";\nimport SideBar from \"../Components/SideBar\";\nimport Headers from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport { useDispatch } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport Downline from \"../Components/Dashboard/Downline\";\nimport Income from \"../Components/Income/Income\";\n\n/**\n * @author\n * @function Dashboard\n **/\n\nconst Dashboard = (props) => {\n  const [tronWeb, setTronWeb] = useState();\n  const [lastTronWalletAddress, setTronWalletAddress] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const tronLoader = setInterval(() => {\n      if (window.tronWeb && window.tronWeb.ready) {\n        setTronWeb(window.tronWeb);\n        clearInterval(tronLoader);\n      }\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (tronWeb && tronWeb.ready) {\n      setTronWalletAddress(tronWeb.defaultAddress.base58);\n    }\n  }, [tronWeb]);\n\n  useEffect(() => {\n    if (tronWeb && tronWeb.ready && lastTronWalletAddress) {\n      let forclear = setInterval(() => {\n        if (tronWeb.defaultAddress.base58 === lastTronWalletAddress) {\n        } else {\n          localStorage.removeItem(\"isAuth\");\n          setTronWalletAddress(\"\");\n          dispatch({\n            type: \"LOGOUT\",\n          });\n          window.location.reload();\n          clearInterval(forclear);\n        }\n      }, 1000);\n    }\n  }, [tronWeb, lastTronWalletAddress]);\n\n  return (\n    <div class=\"sb-nav-fixed\">\n      <Headers />\n      <div id=\"layoutSidenav\">\n        <SideBar />\n        <div id=\"layoutSidenav_content\">\n          <main>\n            <div class=\"container-fluid\">\n              <Route exact path=\"/dashboard\" component={Home}/>\n              <Route exact path=\"/dashboard/downline\" component={Downline}/>\n              <Route exact path=\"/dashboard/income\" >\n\n                <Income tronWeb={tronWeb}></Income>\n              </Route>\n            </div>\n          </main>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/home/hassan/blocTechProj/TRON_EARN/src/redux/reducers/userReducer.js",[],"/home/hassan/blocTechProj/TRON_EARN/src/environment.js",[],"/home/hassan/blocTechProj/TRON_EARN/src/Components/Income/Income.js",["135","136","137"],"import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { environment } from \"../../environment\";\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// const TronWeb = require(\"tronweb\");\n// const TronGrid = require(\"trongrid\");\n/**\n * @author\n * @function\n **/\n\nconst Income = ({ tronWeb }) => {\n  const { userIdForIncome } = useSelector((state) => state.UserReducer);\n  // console.log(usersID,\"usersID\")\n  const [eventsArray, setEventsArray] = useState([]);\n  useEffect(() => {\n    if (tronWeb) {\n      tronWeb\n        .getEventResult(environment.contractAddress, {\n          eventName: \"INCOME\",\n          // size: 2,\n        })\n        .then(\n          (res) => {\n            // console.log(res)\n            setEventsArray(res);\n          },\n          [tronWeb]\n        )\n        .catch((e) => {});\n    }\n  }, [tronWeb]);\n  let EventsArray =\n    eventsArray !== undefined && eventsArray !== null ? eventsArray : [];\n  // console.log(\"EventsArray\", EventsArray);\n  // const  FilterArray = EventsArray.filter((id)=> Number(id.result[0]=== Number(usersID)))\n\n  const FilterArray = EventsArray.filter((i) => {\n    return +i.result[0] === Number(userIdForIncome);\n  });\n  // console.log(userIdForIncome,\"FilterArray\")\n\n  return (\n    <div>\n      <table\n        class=\"table table-bordered\"\n        id=\"dataTable\"\n        width=\"100%\"\n        cellspacing=\"0\"\n      >\n        <thead>\n          <tr >\n            <th className=\"incomHeading\">User</th>\n            <th className=\"incomHeading\">Level1</th>\n            <th className=\"incomHeading\">Amount</th>\n            <th className=\"incomHeading\">Type</th>\n            <th className=\"incomHeading\">View Txn</th>\n            <th className=\"incomHeading\">Time</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {FilterArray != undefined\n            ? FilterArray.map((arr) => {\n                  // console.log(arr.result,\"arr\")\n                return (\n                  <tr className=\"incomHeading\">\n                    <td>{arr.result[0]}</td>\n                    <td>{arr.result[2]}</td>\n                    <td>{tronWeb.fromSun(arr.result[3])}</td>\n                    <td>{arr.result[1]}</td>\n                    <td>\n                      <a\n                        href={`https://shasta.tronscan.org/#/transaction/${arr.transaction}`}\n                        target=\"_blank\"\n                      >\n                        {arr.transaction.slice(0, 9)}....\n                      </a>\n                    </td>\n                    <td>{moment.unix(arr.result[4]).format(\"MMM Do YY\")}</td>\n                  </tr>\n                );\n              })\n            : []}\n          {/* <tr>\n                          <td>Tiger Nixon</td>\n                          <td>System Architect</td>\n                          <td>Edinburgh</td>\n                          <td>61</td>\n                          <td>2011/04/25</td>\n                          <td>$320,800</td>\n                        </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Income;\n","/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Downline/index.js",[],"/home/hassan/blocTechProj/TRON_EARN/src/Components/SideBar/index.jsx",[],"/home/hassan/blocTechProj/TRON_EARN/src/Components/Header/index.jsx",["138","139","140","141"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { environment } from \"../../environment\";\nimport { LogoutAction } from \"../../redux/actions\";\n\n/**\n * @author\n * @function Header\n **/\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n      <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"logo.png\" style={{ width: \"10rem\" }} />\n      </a>\n      {/* <button\n        class=\"btn btn-link btn-sm order-1 order-lg-0\"\n        id=\"sidebarToggle\"\n        href=\"#\"\n      >\n        <i class=\"fas fa-bars\"></i>\n      </button> */}\n\n      <form\n        style={{ visibility: \"hidden\" }}\n        class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\"\n      >\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            type=\"text\"\n            placeholder=\"Search for...\"\n            aria-label=\"Search\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" type=\"button\">\n              <i class=\"fas fa-search\"></i>\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <ul class=\"navbar-nav ml-auto ml-md-0\">\n        <li\n          class=\"nav-item\"\n          style={{ display: \"flex\", alignItems: \"center\", color: \"white\",paddingRight:10 }}\n        >\n          {environment.contractAddress}\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a\n            class=\"nav-link dropdown-toggle\"\n            id=\"userDropdown\"\n            href=\"#\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <i class=\"fas fa-user fa-fw\"></i>\n          </a>\n          <div\n            class=\"dropdown-menu dropdown-menu-right\"\n            aria-labelledby=\"userDropdown\"\n          >\n            {/* <a class=\"dropdown-item\" href=\"#\">\n              Settings\n            </a>\n            <a class=\"dropdown-item\" href=\"#\">\n              Activity Log\n            </a> */}\n            {/* <div class=\"dropdown-divider\"></div> */}\n            <a class=\"dropdown-item\" onClick={() => dispatch(LogoutAction())}>\n              Logout\n            </a>\n          </div>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","/home/hassan/blocTechProj/TRON_EARN/src/Components/Footer/index.jsx",["142","143"],"import React from 'react'\n\n/**\n* @author\n* @function Footer\n**/\n\nconst Footer = (props) => {\n  return (\n    <footer class=\"py-4 bg-light mt-auto\" >\n      <div class=\"container-fluid\" >\n        <div class=\"d-flex align-items-center justify-content-between small\">\n          <div class=\"text-muted\">\n            Copyright &copy; TronEarn {new Date().getFullYear()}\n          </div>\n          <div>\n            <a href=\"#\">Privacy Policy</a>\n            &middot;\n            <a href=\"#\">Terms &amp; Conditions</a>\n          </div>\n        </div>\n      </div>\n     \n    </footer>\n \n  );\n  }\n\n\nexport default Footer","/home/hassan/blocTechProj/TRON_EARN/src/Components/Dashboard/Home/index.jsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"import React, { useState } from \"react\";\nimport { Progress } from \"react-sweet-progress\";\nimport \"react-sweet-progress/lib/style.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {Link} from 'react-router-dom'\n\nimport {\n  smartMatrixAction,\n  smartMatrixLevel2Action,\n  silverMatrixAction,\n  silverMatrixLevel2Action,\n  goldMatrixAction,\n  goldMatrixLevel2Action,\n  royalMatrixAction,\n  royalMatrixLevel2Action,\n  crownMatrixAction,\n  crownMatrixLevel2Action,\n} from \"../../../redux/actions\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport { css } from \"@emotion/core\";\nimport impButn from \"./buyButn.png\";\nimport impButninActive from \"./inActive.png\";\nimport { toast } from \"react-toastify\";\n/**\n * @author\n * @function Home\n **/\n\nconst Home = () => {\n  <Progress percent={88} status=\"success\" />;\n  const dispatch = useDispatch();\n\n  const {\n    bStation1,\n    bStation2,\n    bStation3,\n    bStation4,\n    bStation5,\n    bStation6,\n    bStation7,\n    smartMLevelOne,\n    smartMLevelTwo,\n    silverMLevelOne,\n    silverMLevelTwo,\n    goldMLevelOne,\n    goldMLevelTwo,\n    royalMLevelOne,\n    royalMLevelTwo,\n    crownMLevelOne,\n    crownMLevelTwo,\n    userWalletAddress,\n    matrixIncome,\n    levelIncome,\n    directReferrals,\n    isClickedForTrue,\n    contract,\n    tronWeb,\n    levelReward,\n    usersID,\n    withdrawAble,\n    refIncome ,\n    getUserDownLine,\n    uplineIncome,\n    totalIncome,\n    directSponsor\n  } = useSelector((state) => state.UserReducer);\n  \n  let str=directSponsor.slice(0,6)+\"...\"+directSponsor.slice(directSponsor.length-4,directSponsor.length)\n  // let doc=document.querySelectorAll(`bg-info`)\n\n  const [isLoaderTrue, setIsLoaderTrue] = React.useState(true);\n\n  const override = css`\n    display: block;\n    margin-left: 45%;\n    border-color: red;\n  `;\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setIsLoaderTrue(false);\n    }, 5000);\n  }, []);\n\n  //buy level functions\n\n  //level 2\n  const BuyLevelTwoFun = () => {\n    contract.Level2().send({\n      feeLimit: 100_000_000,\n      callValue: tronWeb.toSun(1200),\n    });\n  };\n\n  //level 3\n  const BuyLevelThreeFun = () => {\n    contract.Level3().send({\n      feeLimit: 100_000_000,\n      callValue: tronWeb.toSun(2800),\n    });\n  };\n\n  //level 4\n  const BuyLevelFourFun = () => {\n    contract.Level4().send({\n      feeLimit: 100_000_000,\n      callValue: tronWeb.toSun(9000),\n    });\n  };\n\n  //level 5\n  const BuyLevelFiveFun = () => {\n    contract.Level5().send({\n      feeLimit: 100_000_000,\n      callValue: tronWeb.toSun(25000),\n    });\n  };\n\n  //level 6\n  const BuyLevelSixFun = () => {\n    contract.Level6().send({\n      feeLimit: 100_000_000,\n      callValue: tronWeb.toSun(50000),\n    });\n  };\n\n  //level 7\n  const BuyLevelSevenFun = () => {\n    contract.Level7().send({\n      feeLimit: 100_000_000,\n      callValue: tronWeb.toSun(100000),\n    });\n  };\n\n  // const withDrawFunction = () => {\n  //   contract\n  //     .withdraw()\n  //     .send()\n  //     .then((val) => {\n  //       toast.success(\"withdrawl successfully!\");\n  //     })\n  //     .catch((Err) => {\n  //       toast.error(\"something went wrong!\");\n  //     });\n  // };\n\n  //bussiness\n  const data = [\n    {\n      package: 900,\n      team: 2,\n      turnover: 1800,\n      upgrade: 1200,\n      income: 600,\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: bStation1,\n      isBought: false,\n    },\n    {\n      package: 1200,\n      team: 2,\n      turnover: 4800,\n      upgrade: 2800,\n      income: 2000,\n      sponsorIncome: 960,\n      placementUpline: 3840,\n      isTrue: bStation2,\n      isBought: bStation1 === true ? true : false,\n      click: BuyLevelTwoFun,\n    },\n    {\n      package: 2800,\n      team: 2,\n      turnover: 22400,\n      upgrade: 9000,\n      income: 13400,\n      sponsorIncome: 4480,\n      placementUpline: 17920,\n      isTrue: bStation3,\n      isBought: bStation2 === true ? true : false,\n      click: BuyLevelThreeFun,\n    },\n\n    {\n      package: 9000,\n      team: 2,\n      turnover: 144000,\n      upgrade: 25000,\n      income: 119400,\n      sponsorIncome: 28800,\n      placementUpline: 115200,\n      isTrue: bStation4,\n      isBought: bStation3 === true ? true : false,\n      click: BuyLevelFourFun,\n    },\n\n    {\n      package: 25000,\n      team: 2,\n      turnover: 800000,\n      upgrade: 50000,\n      income: 750000,\n      sponsorIncome: 160000,\n      placementUpline: 640000,\n      isTrue: bStation5,\n      isBought: bStation4 === true ? true : false,\n      click: BuyLevelFiveFun,\n    },\n\n    {\n      package: 50000,\n      team: 2,\n      turnover: 3200000,\n      upgrade: 100000,\n      income: 3100000,\n      sponsorIncome: 640000,\n      placementUpline: 2560000,\n      isTrue: bStation6,\n      isBought: bStation5 === true ? true : false,\n      click: BuyLevelSixFun,\n    },\n\n    {\n      package: \"100000\",\n      team: 2,\n      turnover: 12800000,\n      upgrade: \"\",\n      income: 12800000,\n      sponsorIncome: 2560000,\n      placementUpline: 10240000,\n      isTrue: bStation7,\n      isBought: bStation6 === true ? true : false,\n      click: BuyLevelSevenFun,\n    },\n  ];\n\n  //smart matrix\n  let smartMatrixData = [\n    {\n      package: 5000,\n      team: 2,\n      turnover: 15000,\n      upgrade: 10000,\n      income: 5000,\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: smartMLevelOne,\n    },\n    {\n      package: 10000,\n      team: 2,\n      turnover: 90000,\n      upgrade: \"\",\n      income: 90000,\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: smartMLevelTwo,\n    },\n  ];\n\n  //silver matrix\n  let silverMatrixData = [\n    {\n      package: 50000,\n      team: 2,\n      turnover: 150000,\n      upgrade: \"100000\",\n      income: 50000,\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: silverMLevelOne,\n    },\n    {\n      package: \"100000\",\n      team: 2,\n      turnover: \"900000\",\n      upgrade: \"\",\n      income: \"900000\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: silverMLevelTwo,\n    },\n  ];\n\n  //gold matrix\n  let goldMatrixData = [\n    {\n      package: \"100000\",\n      team: 2,\n      turnover: \"300000\",\n      upgrade: \"200000\",\n      income: \"100000\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: goldMLevelOne,\n    },\n    {\n      package: \"200000\",\n      team: 2,\n      turnover: \"1800000\",\n      upgrade: \"\",\n      income: \"1800000\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: goldMLevelTwo,\n    },\n  ];\n\n  //royal matrix\n  let royalMatrixData = [\n    {\n      package: \"500000\",\n      team: 2,\n      turnover: \"1500000\",\n      upgrade: \"1000000\",\n      income: \"500000\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: goldMLevelOne,\n    },\n    {\n      package: \"1000000\",\n      team: 2,\n      turnover: \"90000000\",\n      upgrade: \"\",\n      income: \"90000000\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: goldMLevelTwo,\n    },\n  ];\n\n  //crown matrix\n  let crownMatrixData = [\n    {\n      package: \"5000000\",\n      team: 2,\n      turnover: \"1.5 Cr\",\n      upgrade: \"1 Cr\",\n      income: \"5000000\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: crownMLevelOne,\n    },\n\n    {\n      package: \"1 Cr\",\n      team: 2,\n      turnover: \"9 Cr\",\n      upgrade: \"\",\n      income: \"9 Cr\",\n      sponsorIncome: \"\",\n      placementUpline: \"\",\n      isTrue: crownMLevelTwo,\n    },\n\n  ];\n  crownMatrixData.forEach(element => {\n    console.log(element.isTrue);\n  });\nconsole.log('crwonMatrix',crownMatrixData.isTrue);\n\n  const copyReferralLink = () => {\n    let get = document.getElementById(\"refer\").select();\n    document.execCommand(\"copy\");\n  };\n\n  const upgradeFunction=()=>{\n    return data.map((item, index) => {\n      return (\n        <>\n          {item.isBought && !item.isTrue ? (\n            <button\n              type=\"submit\"\n              class=\"btn btn-info margin-top-10\"\n              onClick={item.click}\n            >\n              {\"Upgrade for\" + \" \" + item.package}\n            </button>\n          ) : null}\n        </>\n      );\n    });\n  }\n\n  // console.log(\"here is my withdrawable====>\", withdrawAble);\n\n  return (\n    <>\n      <h1\n        class=\"mt-4\"\n        id=\"dashboard\"\n        style={{ marginTop: \"70px\", color: \"#b8c0f1\" }}\n      >\n        Dashboard\n      </h1>\n      <ol class=\"breadcrumb mb-4\">\n        <li class=\"breadcrumb-item active\">Dashboard</li>\n      </ol>\n      <div class=\"input-group mb-3\">\n        <input\n          style={{ height: \"100%\" }}\n          type=\"text\"\n          class=\"form-control pl-15 bg-transparent\"\n          placeholder=\"View\"\n          id=\"refer\"\n          value={`${window.location.origin}/login/?ref=${usersID}`}\n          // onChange={(e) => setReferrerAdd(e.target.value)}\n        />\n        <input\n          type=\"hidden\"\n          name=\"type\"\n          value=\"VIEW\"\n          id=\"type\"\n          readonly=\"true\"\n        />\n        <span style={{ paddingRight: 10, paddingLeft: 10 }}></span>\n        <button\n          type=\"submit\"\n          class=\"btn btn-info margin-top-10\"\n          onClick={copyReferralLink}\n        >\n          COPY\n        </button>\n      </div>\n\n      <div\n        id=\"business\"\n        style={{\n          textAlign: \"center\",\n          fontSize: 30,\n          paddingTop: 13,\n          paddingBottom: 13,\n          color:\"#b8c0f1\"\n        }}\n      >\n        PLANS INFO\n      </div>\n      <div class=\"row\">\n\n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box1`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">MATRIX INCOME</span>{\" \"}\n              <span class=\"info-box-number\">{matrixIncome} Trx</span>{\" \"}\n            </div>\n          </div>\n        </div>\n       \n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box2`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">MY LEVEL </span>{\" \"}\n              <span class=\"info-box-number\">{levelIncome} Trx</span>{\" \"}\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-4\"  >\n          <div class={`info-box info-box8`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <Link to=\"/dashboard/downline\">\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">MY TEAM </span>{\" \"}\n              <span class=\"info-box-number\">{levelIncome} Trx</span>{\" \"}\n            </div>\n             </Link>\n          </div>\n        </div>\n        \n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box9`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">UPLINE INCOME </span>{\" \"}\n              <span class=\"info-box-number\">{uplineIncome} Trx</span>{\" \"}\n            </div>\n          </div>\n        </div>\n     \n       \n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box3`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">TOTAL INCOME</span>{\" \"}\n              <span class=\"info-box-number\">\n                {totalIncome} Trx\n              </span>{\" \"}\n            </div>\n          </div>\n        </div>\n       \n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box4`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">DIRECT SPONSOR</span>{\" \"}\n              <span class=\"info-box-number\">{str}</span>{\" \"}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box5`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">DIRECT INCOME</span>{\" \"}\n              <span class=\"info-box-number\">{refIncome ? refIncome : 0}</span>{\" \"}\n            </div>\n          </div>\n        </div>\n     \n        <div class=\"col-lg-4\">\n          <div class={`info-box info-box7`}>\n            <span class=\"info-box-icon push-bottom rounded\">\n              <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n              <span class=\"path1\"></span>\n              <span class=\"path2\"></span>\n            </span>\n            <div class=\"info-box-content changeColor\">\n              <span class=\"info-box-text\">GLOBAL MATRIX</span>{\" \"}\n              <span class=\"info-box-number\">0</span>\n            </div>\n          </div>\n        </div>\n     \n      </div>\n\n      {isLoaderTrue ? (\n        <CircleLoader\n          color=\"red\"\n          loading={isLoaderTrue}\n          css={override}\n          size={100}\n        />\n      ) : (\n        <>\n          {!isClickedForTrue ? upgradeFunction() : null} &nbsp;\n          {/* {!isClickedForTrue ? (\n            <button\n              type=\"submit\"\n              class=\"btn btn-info margin-top-10\"\n              disabled={withdrawAble <= 0 ? true : false}\n              onClick={withDrawFunction}\n            >\n              Withdraw {withdrawAble}\n            </button>\n          ) : null} */}\n          <div\n            id=\"business\"\n            style={{\n              textAlign: \"center\",\n              fontSize: 30,\n              paddingTop: 13,\n              paddingBottom: 13,\n              color:\"#b8c0f1\"\n            }}\n          >\n            BUSINESS PLAN\n          </div>\n          <div class=\"row\">\n            {data.map((items,i) => {\n              return (\n                <div class=\"col-lg-4 setOnHover\">\n                  {/* {\n                    items.isBought ? (\n                      <img\n                        src={impButn}\n                        className=\"buy-button\"\n                        style={{ opacity: items.isTrue ? 0.5 : 1 }}\n                        onClick={items.isTrue ? null : items.click}\n                      />\n                    ) : null\n                    // <img src={impButninActive} className=\"buy-button\" />\n                  } */}\n                  <div\n                    class={`info-box ${\n                      items.isTrue ? `bg-info${i}`  : \"non-active-info\"\n                    }`}\n                  > \n                    <span class=\"info-box-icon push-bottom rounded\">\n                      <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n                      <span class=\"path1\"></span>\n                      <span class=\"path2\"></span>\n                    </span>\n                    <div class=\"info-box-content\">\n                      <span class=\"info-box-text\">PACKAGE</span>{\" \"}\n                      <span class=\"info-box-number\">{items.package} Trx</span>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n            {/* global community */}\n          </div>\n          <div class=\"row\" id=\"global\">\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                paddingTop: 13,\n                paddingBottom: 13,\n                width: \"100%\",\n                color:\"#b8c0f1\"\n              }}\n            >\n              {\" \"}\n              Global community\n            </div>\n\n            {bStation3 === true && isClickedForTrue === false ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  // height: 30,\n                  borderRadius: 20,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  color: \"white\",\n                  paddingTop: 20,\n                  paddingBottom: 20,\n                  flexDirection: \"column\",\n                }}\n                className=\"bg-info\"\n              >\n                Now you can proceed to the Global community (Smart Matrix).\n                Click below to go to global Community\n                <div class=\"row\" style={{ marginTop: 20 }}>\n                  <div class=\"col-lg-6 col-xs-12 text-center\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={() => dispatch(smartMatrixAction())}\n                    >\n                      Click\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n          <div class=\"row\" id=\"smart\">\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                paddingTop: 13,\n                paddingBottom: 13,\n                width: \"100%\",\n                color:\"#b8c0f1\"\n              }}\n            >\n              Smart Matrix\n            </div>\n            {smartMatrixData.map((items, i) => {\n              return (\n                <div class=\"col-lg-6\">\n                  {items.isTrue != true && i === 1 ? (\n                    <img\n                      src={impButn}\n                      className=\"buy-button\"\n                      onClick={() =>\n                        smartMLevelOne === true &&\n                        dispatch(smartMatrixLevel2Action())\n                      }\n                    />\n                  ) : null}\n                  <div\n                    class={`info-box ${\n                      items.isTrue ? \"smart-bg-info\" : \"non-active-info\"\n                    }`}\n                  >\n                    <span class=\"info-box-icon push-bottom rounded\">\n                      <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n                      <span class=\"path1\"></span>\n                      <span class=\"path2\"></span>\n                    </span>\n                    <div class=\"info-box-content\">\n                      <span class=\"info-box-text\">PACKAGE</span>{\" \"}\n                      <span class=\"info-box-number\">{items.package} Trx</span>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n            {bStation4 === true && isClickedForTrue === false ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  // height: 30,\n                  borderRadius: 20,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  color: \"white\",\n\n                  paddingTop: 20,\n                  paddingBottom: 20,\n                  flexDirection: \"column\",\n                }}\n                className=\"bg-info\"\n              >\n                Now you can proceed to the Silver Matrix. Click below to go to\n                global Community\n                <div class=\"row\" style={{ marginTop: 20 }}>\n                  <div class=\"col-lg-6 col-xs-12 text-center\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={() => dispatch(silverMatrixAction())}\n                    >\n                      Click\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n\n          <div class=\"row\" id=\"silver\">\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                paddingTop: 13,\n                paddingBottom: 13,\n                width: \"100%\",\n                color:\"#b8c0f1\"\n              }}\n            >\n              Silver Matrix\n            </div>\n            {silverMatrixData.map((items, i) => {\n              return (\n                <div class=\"col-lg-6\">\n                  {items.isTrue != true && i === 1 ? (\n                    <img\n                      src={impButn}\n                      className=\"buy-button\"\n                      onClick={() =>\n                        silverMLevelOne === true &&\n                        dispatch(silverMatrixLevel2Action())\n                      }\n                    />\n                  ) : null}\n                  <div\n                    class={`info-box ${\n                      items.isTrue ? \"silver-bg-info\" : \"non-active-info\"\n                    }`}\n                  >\n                    <span class=\"info-box-icon push-bottom rounded\">\n                      <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n                      <span class=\"path1\"></span>\n                      <span class=\"path2\"></span>\n                    </span>\n                    <div class=\"info-box-content\">\n                      <span class=\"info-box-text\">PACKAGE</span>{\" \"}\n                      <span class=\"info-box-number\">{items.package} Trx</span>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n            {bStation5 === true && isClickedForTrue === false ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  // height: 30,\n                  borderRadius: 20,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  color: \"white\",\n\n                  paddingTop: 20,\n                  paddingBottom: 20,\n                  flexDirection: \"column\",\n                }}\n                className=\"bg-info\"\n              >\n                Now you can proceed to the GOLD Matrix . Click below to go to\n                global Community\n                <div class=\"row\" style={{ marginTop: 20 }}>\n                  <div class=\"col-lg-6 col-xs-12 text-center\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={() => dispatch(goldMatrixAction())}\n                    >\n                      Click\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n          <div class=\"row\" id=\"gold\">\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                paddingTop: 13,\n                paddingBottom: 13,\n                width: \"100%\",\n                color:\"#b8c0f1\"\n              }}\n            >\n              GOLD Matrix\n            </div>\n            {goldMatrixData.map((items, i) => {\n              return (\n                <div class=\"col-lg-6\">\n                  {items.isTrue != true && i === 1 ? (\n                    <img\n                      src={impButn}\n                      className=\"buy-button\"\n                      onClick={() =>\n                        goldMLevelOne === true &&\n                        dispatch(goldMatrixLevel2Action())\n                      }\n                    />\n                  ) : null}\n                  <div\n                    class={`info-box ${\n                      items.isTrue ? \"gold-bg-info\" : \"non-active-info\"\n                    }`}\n                  >\n                    <span class=\"info-box-icon push-bottom rounded\">\n                      <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n                      <span class=\"path1\"></span>\n                      <span class=\"path2\"></span>\n                    </span>\n                    <div class=\"info-box-content\">\n                      <span class=\"info-box-text\">PACKAGE</span>{\" \"}\n                      <span class=\"info-box-number\">{items.package} Trx</span>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n            {bStation6 === true && isClickedForTrue === false ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  // height: 30,\n                  borderRadius: 20,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  color: \"white\",\n\n                  paddingTop: 20,\n                  paddingBottom: 20,\n                  flexDirection: \"column\",\n                }}\n                className=\"bg-info\"\n              >\n                Now you can proceed to the Royal Matrix . Click below to go to\n                global Community\n                <div class=\"row\" style={{ marginTop: 20 }}>\n                  <div class=\"col-lg-6 col-xs-12 text-center\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={() => dispatch(royalMatrixAction())}\n                    >\n                      Click\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n          <div class=\"row\" id=\"royal\">\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                paddingTop: 13,\n                paddingBottom: 13,\n                width: \"100%\",\n                color:\"#b8c0f1\"\n              }}\n            >\n              Royal Matrix\n            </div>\n            {royalMatrixData.map((items, i) => {\n              return (\n                <div class=\"col-lg-6\">\n                  {items.isTrue != true && i === 1 ? (\n                    <img\n                      src={impButn}\n                      className=\"buy-button\"\n                      onClick={() =>\n                        royalMLevelOne === true &&\n                        dispatch(royalMatrixLevel2Action())\n                      }\n                    />\n                  ) : null}\n                  <div\n                    class={`info-box ${\n                      items.isTrue ? \"royal-bg-info\" : \"non-active-info\"\n                    }`}\n                  >\n                    <span class=\"info-box-icon push-bottom rounded\">\n                      <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n                      <span class=\"path1\"></span>\n                      <span class=\"path2\"></span>\n                    </span>\n                    <div class=\"info-box-content\">\n                      <span class=\"info-box-text\">PACKAGE</span>{\" \"}\n                      <span class=\"info-box-number\">{items.package} Trx</span>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n            {bStation6 === true && isClickedForTrue === false ? (\n              <div\n                style={{\n                  width: \"100%\",\n                  // height: 30,\n                  borderRadius: 20,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  color: \"white\",\n\n                  paddingTop: 20,\n                  paddingBottom: 20,\n                  flexDirection: \"column\",\n                }}\n                className=\"bg-info\"\n              >\n                Now you can proceed to the Crown Matrix . Click below to go to\n                global Community\n                <div class=\"row\" style={{ marginTop: 20 }}>\n                  <div class=\"col-lg-6 col-xs-12 text-center\">\n                    <button\n                      type=\"submit\"\n                      class=\"btn btn-info margin-top-10\"\n                      onClick={() => dispatch(crownMatrixAction())}\n                    >\n                      Click\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n          <div class=\"row\" id=\"crown\">\n            <div\n              style={{\n                textAlign: \"center\",\n                fontSize: 30,\n                paddingTop: 13,\n                paddingBottom: 13,\n                width: \"100%\",\n                color:\"#b8c0f1\"\n              }}\n            >\n              Crown Matrix\n            </div>\n            {crownMatrixData.map((items, i) => {\n              return (\n                <div class=\"col-lg-6\">\n                  {items.isTrue != true && i === 1 ? (\n                    <img\n                      src={impButn}\n                      className=\"buy-button\"\n                      onClick={() =>\n                        crownMLevelOne === true &&\n                        dispatch(crownMatrixLevel2Action())\n                      }\n                    />\n                  ) : null}\n                  <div\n                    class={`info-box ${\n                      items.isTrue ? \"crown-bg-info\" : \"non-active-info\"\n                    }`}\n                  >\n                    <span class=\"info-box-icon push-bottom rounded\">\n                      <img src=\"https://tronsquire.io/auth/img/icon1.png\" />\n                      <span class=\"path1\"></span>\n                      <span class=\"path2\"></span>\n                    </span>\n                    <div class=\"info-box-content\">\n                      <span class=\"info-box-text\">PACKAGE</span>{\" \"}\n                      <span class=\"info-box-number\">{items.package} Trx</span>{\" \"}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","/home/hassan/blocTechProj/TRON_EARN/src/views/Question.js",["180","181","182","183","184"],"import React,{useState} from 'react'\n\nexport default function Question() {\n    const [quest1Active,setQuest1Active]=useState(false)\n    const [quest2Active,setQuest2Active]=useState(false)\n    const [quest3Active,setQuest3Active]=useState(false)\n    const [quest4Active,setQuest4Active]=useState(false)\n    const [quest5Active,setQuest5Active]=useState(false)\n    const [quest6Active,setQuest6Active]=useState(false)\n    const [quest7Active,setQuest7Active]=useState(false)\n    const [quest8Active,setQuest8Active]=useState(false)\n    const [quest9Active,setQuest9Active]=useState(false)\n    const [quest10Active,setQuest10Active]=useState(false)\n    const [quest11Active,setQuest11Active]=useState(false)\n    const [quest12Active,setQuest12Active]=useState(false)\n    const [quest13Active,setQuest13Active]=useState(false)\n    const [quest15Active,setQuest15Active]=useState(false)\n    const [quest16Active,setQuest16Active]=useState(false)\n    const [quest17Active,setQuest17Active]=useState(false)\n    return (\n        <div id=\"faq\" class=\"faq\">\n        <div class=\"faq-img\">\n            <img src=\"/img/frequently.svg\" alt=\"\" />\n        </div>\n        <div class=\"faq-title\">Frequently Asked Questions</div>\n        <div class=\"faqs\">\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest1Active(!quest1Active)} className={`faq-block-top ${quest1Active? \"active\": \"\"}`}>Q. How to start working with TronEarn?</div>\n                <div class=\"faq-block-content\">Step 1 : Registration.<br />Step 2 : Buy Any BASE and Earn TRON with Global BASE.</div>\n            </div>\n            <div class=\"faq-block\">\n                <div  onClick={()=>setQuest2Active(!quest2Active)} className={`faq-block-top ${quest2Active? \"active\": \"\"}`}>Q. What is TRON?</div>\n                <div class=\"faq-block-content\">TRON (TRX) is one of the leading cryptocurrency established in 2017. The blockchain of the cryptocurrency allows you to create on the basis of smart contracts. A huge number of large crypto companies uses this currency.</div>\n            </div>\n\n\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest3Active(!quest3Active)} className={`faq-block-top ${quest3Active? \"active\": \"\"}`}>Q. What Happen with My Registrar Fees ?</div>\n                <div class=\"faq-block-content\">A.Registration Fees 20 TRX is instantly paid to your direct<br /> sponsor.</div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest4Active(!quest4Active)} className={`faq-block-top ${quest4Active? \"active\": \"\"}`}>Q. How many BASE are in the system ?</div>\n                <div class=\"faq-block-content\">A.Total 12 Worldwide BASE in the system.</div>\n            </div>\n\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest5Active(!quest5Active)} className={`faq-block-top ${quest5Active? \"active\": \"\"}`}>Q. What is a SMART CONTRACT? What are its ADVANTAGES?</div>\n                <div class=\"faq-block-content\">A.Smart contract – the algorithm inside the blockchain cryptocurrencies. In our case that TRON is number one among the those on which it is possible to create smart contracts. The main purpose of such contracts is the automation of the relationship, the opportunity to make commitments.</div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest6Active(!quest6Active)} className={`faq-block-top ${quest6Active? \"active\": \"\"}`}>Q. Who MANAGES the platform?</div>\n                <div class=\"faq-block-content\">A.Platform TronEarn does not have a Manager. There are the creators of the Smart contract who works in the TRON blockchain. This means that the platform is fully decentralized (i.e. it has no leaders or admins).</div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest7Active(!quest7Active)} className={`faq-block-top ${quest7Active? \"active\": \"\"}`}>Q. WHAT DATA DO I NEED TO REGISTER?</div>\n                <div class=\"faq-block-content\">A.To register you will need only a wallet Tronlink - a Google Chrome extension (PC) and/or some other applications for mobile devices. Tested and safe applications:<br />\n                wallet Tronlink <a href=\"https://www.tronlink.org/\" target=\"_blank\">https://www.tronlink.org/</a><br />\n                wallet Tron Wallet <a href=\"https://www.tronwallet.me/\" target=\"_blank\">https://www.tronwallet.me/</a><br /> \n                Pocket Wallet Token <a href=\"https://www.tokenpocket.pro/\" target=\"_blank\">https://www.tokenpocket.pro</a>\n                During registration you will need to enter the name or email address.\n                </div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest8Active(!quest8Active)} className={`faq-block-top ${quest8Active? \"active\": \"\"}`}>Q. HOW TO BUY TRON, IF I NEVER HAD TO DEAL WITH CRYPTOCURRENCY?</div>\n                <div class=\"faq-block-content\">A.There are many ways of buying/selling cryptocurrency - all of them are as simple as with ordinary money, enough to make a couple of transactions independently, then each operation will take you no more than 1-2 minutes. One of the main ways is the use of sharing sites that allow you to exchange real money for free. One of the ways of replenishment of the purse.\n                Proven website exchange: <a href=\"https://www.bestchange.net/\" target=\"_blank\">https://www.bestchange.net/</a>\n                </div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest9Active(!quest9Active)} className={`faq-block-top ${quest9Active? \"active\": \"\"}`}>Q. HOW TO SWAP ETHEREUM TO TRON?</div>\n                <div class=\"faq-block-content\">A.If you have Ethereum than need not to buy TRX.You can just swap Ethereum to Tron in <a href=\"https://www.bestchange.net/ethereum-to-tron.html\" target=\"_blank\">https://www.bestchange.net/ethereum-to-tron.html</a>\n                </div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest10Active(!quest10Active)} className={`faq-block-top ${quest10Active? \"active\": \"\"}`}>Q. What is Worldwide One Line Base ?</div>\n\n\n                <div class=\"faq-block-content\">A. Worldwide One Line Base is one Worldwide network based on first enter first Join Basis.</div>\n            </div>\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest11Active(!quest11Active)} className={`faq-block-top ${quest11Active? \"active\": \"\"}`}>Q. How many Bases are in the system ?</div>\n                <div class=\"faq-block-content\">A. Total 12 Worldwide Bases in the system.</div>\n            </div>\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest12Active(!quest12Active)} className={`faq-block-top ${quest12Active? \"active\": \"\"}`}>Q. Can I buy the 4th base at once?</div>\n                <div class=\"faq-block-content\">A. No, all bases are bought in turn. If you haven't bought 1-2-3 bases, then you cannot buy base 4.</div>\n            </div>\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest13Active(!quest13Active)} className={`faq-block-top ${quest13Active? \"active\": \"\"}`}>Q. What happen is I not Enter at Next Base ?</div>\n                <div class=\"faq-block-content\">A.Your account remain active in the system forever, and you will get Referral Income from entire team. you may enter next Base anytime you wants.</div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest15Active(!quest15Active)} className={`faq-block-top ${quest15Active? \"active\": \"\"}`}>Q. Is my (TRX) Funds safe ?</div>\n                <div class=\"faq-block-content\">A.YES, YOUR FUND IS SAFE as it's always Stored on Decentralized Tron Wallets like TRUST WALLET or METAMASK</div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest16Active(!quest16Active)} className={`faq-block-top ${quest16Active? \"active\": \"\"}`}>Q. Is it possible to earn Passively here at TronEarn ?</div>\n                <div class=\"faq-block-content\">A.Yes, Definitely. As TronEarn is Worldwide One Line Base Decentralized Open Source Smart Contract System. Every New User who Joins after you falls under you in one (Uni/Mono) line. Personal Invitation or Recruitment gives you additional Opportunity to earn Referral Income 20 TRX. In addition to this Base gives you Opportunity to multiply 400 Tron to X3072 TIMES i.e. 400 TRX to 1228800 TRX multiple times again and again.</div>\n            </div>\n\n            <div class=\"faq-block\">\n                <div onClick={()=>setQuest17Active(!quest17Active)} className={`faq-block-top ${quest17Active? \"active\": \"\"}`}>Q. I don't have Referral link, can I register with<br /> TronEarn ?</div>\n                <div class=\"faq-block-content\">A. Yes,You will be Register under Systems Referral link.</div>\n            </div>\n\n        </div>\n        <div class=\"faq-img\"></div>\n    </div>\n  \n    )\n}\n",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":12},{"ruleId":"189","severity":1,"message":"193","line":10,"column":25,"nodeType":"191","messageId":"192","endLine":10,"endColumn":30},{"ruleId":"194","severity":1,"message":"195","line":58,"column":6,"nodeType":"196","endLine":58,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":66,"column":21,"nodeType":"200","messageId":"201","endLine":66,"endColumn":23},{"ruleId":"194","severity":1,"message":"202","line":71,"column":6,"nodeType":"196","endLine":71,"endColumn":21,"suggestions":"203"},{"ruleId":"194","severity":1,"message":"204","line":84,"column":6,"nodeType":"196","endLine":84,"endColumn":53,"suggestions":"205"},{"ruleId":"194","severity":1,"message":"204","line":90,"column":6,"nodeType":"196","endLine":90,"endColumn":15,"suggestions":"206"},{"ruleId":"189","severity":1,"message":"207","line":99,"column":19,"nodeType":"191","messageId":"192","endLine":99,"endColumn":29},{"ruleId":"189","severity":1,"message":"208","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":21},{"ruleId":"189","severity":1,"message":"209","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":11},{"ruleId":"189","severity":1,"message":"210","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":12},{"ruleId":"211","severity":1,"message":"212","line":55,"column":19,"nodeType":"213","endLine":55,"endColumn":43},{"ruleId":"214","severity":1,"message":"215","line":56,"column":21,"nodeType":"213","endLine":56,"endColumn":55},{"ruleId":"211","severity":1,"message":"212","line":83,"column":21,"nodeType":"213","endLine":83,"endColumn":50},{"ruleId":"211","severity":1,"message":"212","line":88,"column":21,"nodeType":"213","endLine":88,"endColumn":50},{"ruleId":"211","severity":1,"message":"212","line":93,"column":21,"nodeType":"213","endLine":93,"endColumn":50},{"ruleId":"211","severity":1,"message":"212","line":98,"column":21,"nodeType":"213","endLine":98,"endColumn":50},{"ruleId":"211","severity":1,"message":"212","line":103,"column":21,"nodeType":"213","endLine":103,"endColumn":50},{"ruleId":"216","severity":1,"message":"217","line":328,"column":21,"nodeType":"213","endLine":332,"endColumn":22},{"ruleId":"211","severity":1,"message":"218","line":348,"column":15,"nodeType":"213","endLine":348,"endColumn":73},{"ruleId":"214","severity":1,"message":"215","line":349,"column":17,"nodeType":"213","endLine":349,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":357,"column":17,"nodeType":"213","endLine":357,"endColumn":46},{"ruleId":"211","severity":1,"message":"212","line":362,"column":17,"nodeType":"213","endLine":362,"endColumn":46},{"ruleId":"211","severity":1,"message":"212","line":367,"column":17,"nodeType":"213","endLine":367,"endColumn":46},{"ruleId":"211","severity":1,"message":"212","line":372,"column":17,"nodeType":"213","endLine":372,"endColumn":46},{"ruleId":"211","severity":1,"message":"212","line":377,"column":17,"nodeType":"213","endLine":377,"endColumn":46},{"ruleId":"189","severity":1,"message":"219","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":15},{"ruleId":"189","severity":1,"message":"220","line":10,"column":8,"nodeType":"191","messageId":"192","endLine":10,"endColumn":13},{"ruleId":"189","severity":1,"message":"221","line":20,"column":23,"nodeType":"191","messageId":"192","endLine":20,"endColumn":37},{"ruleId":"211","severity":1,"message":"218","line":52,"column":19,"nodeType":"213","endLine":52,"endColumn":31},{"ruleId":"211","severity":1,"message":"218","line":72,"column":19,"nodeType":"213","endLine":72,"endColumn":49},{"ruleId":"222","severity":1,"message":"223","line":72,"column":27,"nodeType":"224","messageId":"225","endLine":72,"endColumn":48},{"ruleId":"211","severity":1,"message":"218","line":79,"column":19,"nodeType":"213","endLine":79,"endColumn":49},{"ruleId":"222","severity":1,"message":"223","line":79,"column":27,"nodeType":"224","messageId":"225","endLine":79,"endColumn":48},{"ruleId":"211","severity":1,"message":"218","line":86,"column":19,"nodeType":"213","endLine":86,"endColumn":49},{"ruleId":"222","severity":1,"message":"223","line":86,"column":27,"nodeType":"224","messageId":"225","endLine":86,"endColumn":48},{"ruleId":"211","severity":1,"message":"218","line":94,"column":19,"nodeType":"213","endLine":94,"endColumn":49},{"ruleId":"222","severity":1,"message":"223","line":94,"column":27,"nodeType":"224","messageId":"225","endLine":94,"endColumn":48},{"ruleId":"226","severity":1,"message":"227","line":184,"column":4,"nodeType":"228","messageId":"229","endLine":280,"endColumn":8},{"ruleId":"189","severity":1,"message":"230","line":5,"column":40,"nodeType":"191","messageId":"192","endLine":5,"endColumn":47},{"ruleId":"189","severity":1,"message":"231","line":95,"column":21,"nodeType":"191","messageId":"192","endLine":95,"endColumn":38},{"ruleId":"198","severity":1,"message":"199","line":102,"column":38,"nodeType":"200","messageId":"201","endLine":102,"endColumn":40},{"ruleId":"189","severity":1,"message":"232","line":201,"column":13,"nodeType":"191","messageId":"192","endLine":201,"endColumn":22},{"ruleId":"194","severity":1,"message":"233","line":51,"column":6,"nodeType":"196","endLine":51,"endColumn":38,"suggestions":"234"},{"ruleId":"189","severity":1,"message":"235","line":5,"column":23,"nodeType":"191","messageId":"192","endLine":5,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":64,"column":24,"nodeType":"200","messageId":"201","endLine":64,"endColumn":26},{"ruleId":"216","severity":1,"message":"217","line":74,"column":23,"nodeType":"213","endLine":77,"endColumn":24},{"ruleId":"211","severity":1,"message":"218","line":16,"column":7,"nodeType":"213","endLine":16,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":17,"column":9,"nodeType":"213","endLine":17,"endColumn":58},{"ruleId":"211","severity":1,"message":"218","line":55,"column":11,"nodeType":"213","endLine":63,"endColumn":12},{"ruleId":"211","severity":1,"message":"212","line":77,"column":13,"nodeType":"213","endLine":77,"endColumn":79},{"ruleId":"211","severity":1,"message":"218","line":17,"column":13,"nodeType":"213","endLine":17,"endColumn":25},{"ruleId":"211","severity":1,"message":"218","line":19,"column":13,"nodeType":"213","endLine":19,"endColumn":25},{"ruleId":"189","severity":1,"message":"236","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"237","line":22,"column":8,"nodeType":"191","messageId":"192","endLine":22,"endColumn":23},{"ruleId":"189","severity":1,"message":"219","line":23,"column":10,"nodeType":"191","messageId":"192","endLine":23,"endColumn":15},{"ruleId":"189","severity":1,"message":"238","line":48,"column":5,"nodeType":"191","messageId":"192","endLine":48,"endColumn":19},{"ruleId":"189","severity":1,"message":"231","line":51,"column":5,"nodeType":"191","messageId":"192","endLine":51,"endColumn":22},{"ruleId":"189","severity":1,"message":"239","line":54,"column":5,"nodeType":"191","messageId":"192","endLine":54,"endColumn":20},{"ruleId":"189","severity":1,"message":"240","line":58,"column":5,"nodeType":"191","messageId":"192","endLine":58,"endColumn":16},{"ruleId":"189","severity":1,"message":"241","line":60,"column":5,"nodeType":"191","messageId":"192","endLine":60,"endColumn":17},{"ruleId":"189","severity":1,"message":"242","line":62,"column":5,"nodeType":"191","messageId":"192","endLine":62,"endColumn":20},{"ruleId":"189","severity":1,"message":"243","line":365,"column":9,"nodeType":"191","messageId":"192","endLine":365,"endColumn":12},{"ruleId":"244","severity":1,"message":"245","line":379,"column":30,"nodeType":"200","messageId":"246","endLine":379,"endColumn":31},{"ruleId":"214","severity":1,"message":"215","line":445,"column":15,"nodeType":"213","endLine":445,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":459,"column":15,"nodeType":"213","endLine":459,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":472,"column":15,"nodeType":"213","endLine":472,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":488,"column":15,"nodeType":"213","endLine":488,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":503,"column":15,"nodeType":"213","endLine":503,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":519,"column":15,"nodeType":"213","endLine":519,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":533,"column":15,"nodeType":"213","endLine":533,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":547,"column":15,"nodeType":"213","endLine":547,"endColumn":69},{"ruleId":"214","severity":1,"message":"215","line":613,"column":23,"nodeType":"213","endLine":613,"endColumn":77},{"ruleId":"189","severity":1,"message":"247","line":626,"column":24,"nodeType":"248","messageId":"192","endLine":626,"endColumn":33},{"ruleId":"198","severity":1,"message":"199","line":691,"column":33,"nodeType":"200","messageId":"201","endLine":691,"endColumn":35},{"ruleId":"214","severity":1,"message":"215","line":692,"column":21,"nodeType":"213","endLine":699,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":707,"column":23,"nodeType":"213","endLine":707,"endColumn":77},{"ruleId":"198","severity":1,"message":"199","line":770,"column":33,"nodeType":"200","messageId":"201","endLine":770,"endColumn":35},{"ruleId":"214","severity":1,"message":"215","line":771,"column":21,"nodeType":"213","endLine":778,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":786,"column":23,"nodeType":"213","endLine":786,"endColumn":77},{"ruleId":"198","severity":1,"message":"199","line":848,"column":33,"nodeType":"200","messageId":"201","endLine":848,"endColumn":35},{"ruleId":"214","severity":1,"message":"215","line":849,"column":21,"nodeType":"213","endLine":856,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":864,"column":23,"nodeType":"213","endLine":864,"endColumn":77},{"ruleId":"198","severity":1,"message":"199","line":926,"column":33,"nodeType":"200","messageId":"201","endLine":926,"endColumn":35},{"ruleId":"214","severity":1,"message":"215","line":927,"column":21,"nodeType":"213","endLine":934,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":942,"column":23,"nodeType":"213","endLine":942,"endColumn":77},{"ruleId":"198","severity":1,"message":"199","line":1004,"column":33,"nodeType":"200","messageId":"201","endLine":1004,"endColumn":35},{"ruleId":"214","severity":1,"message":"215","line":1005,"column":21,"nodeType":"213","endLine":1012,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":1020,"column":23,"nodeType":"213","endLine":1020,"endColumn":77},{"ruleId":"216","severity":1,"message":"217","line":62,"column":33,"nodeType":"213","endLine":62,"endColumn":85},{"ruleId":"216","severity":1,"message":"217","line":63,"column":36,"nodeType":"213","endLine":63,"endColumn":89},{"ruleId":"216","severity":1,"message":"217","line":64,"column":37,"nodeType":"213","endLine":64,"endColumn":92},{"ruleId":"216","severity":1,"message":"217","line":72,"column":42,"nodeType":"213","endLine":72,"endColumn":96},{"ruleId":"216","severity":1,"message":"217","line":78,"column":134,"nodeType":"213","endLine":78,"endColumn":209},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'isAuth'. Either include them or remove the dependency array.","ArrayExpression",["251"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["252"],"React Hook React.useEffect has missing dependencies: 'auth' and 'dispatch'. Either include them or remove the dependency array.",["253"],["254"],"'setLoading' is assigned a value but never used.","'useSelector' is defined but never used.","'svg' is defined but never used.","'Zoom' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'toast' is defined but never used.","'axios' is defined but never used.","'setReferrerAdd' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'tronWeb' is assigned a value but never used.","'userWalletAddress' is assigned a value but never used.","'DownLinde' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["255"],"'useDispatch' is defined but never used.","'useState' is defined but never used.","'impButninActive' is defined but never used.","'royalMLevelTwo' is assigned a value but never used.","'directReferrals' is assigned a value but never used.","'levelReward' is assigned a value but never used.","'withdrawAble' is assigned a value but never used.","'getUserDownLine' is assigned a value but never used.","'get' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'community' is defined but never used.","Program","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch, isAuth]",{"range":"266","text":"267"},"Update the dependencies array to be: [tronWeb, auth, dispatch]",{"range":"268","text":"269"},"Update the dependencies array to be: [tronWeb, isUserAuthenticated, userWalletAddress, dispatch, auth]",{"range":"270","text":"271"},"Update the dependencies array to be: [auth, dispatch, tronWeb]",{"range":"272","text":"273"},"Update the dependencies array to be: [tronWeb, lastTronWalletAddress, dispatch]",{"range":"274","text":"275"},[1511,1513],"[dispatch, isAuth]",[1800,1815],"[tronWeb, auth, dispatch]",[2096,2143],"[tronWeb, isUserAuthenticated, userWalletAddress, dispatch, auth]",[2281,2290],"[auth, dispatch, tronWeb]",[1469,1501],"[tronWeb, lastTronWalletAddress, dispatch]"]